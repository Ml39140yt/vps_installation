// Made with love with Asciidoctor

= Installation d'un VPS
:source-highlighter: pygments
:pygments-linenums-mode: inline
:pygments-style: colorful
Stéphane Apiou <stephane@apiou.org>
v1.0, 2020-03-27
:icons: font
:numbered:
:allow-uri-read:


== Avant propos

Ce document est disponible sur le site https://vps-installation.readthedocs.io[ReadTheDocs]
// inhibé car ne fonctionne pas pour docbook
//image:https://readthedocs.org/projects/vps-installation/badge/[link="https://vps-installation.readthedocs.io"]
et sur https://github.com/apiou/vps_installation[Github].

Cette documentation décrit la méthode que j'ai utilisé pour installer un serveur VPS sur la plate-forme OVH.
Elle est le résultat de très nombreuses heures de travail pour collecter la documentation nécessaire.
Sur mon serveur, j'ai installé un Linux Debian 10. Cette documentation est facilement transposable pour des versions différentes de Debian ou à Ubuntu ou toute autre distribution basée sur l'un ou l'autre.
En revanche si vous utilisez CentOS, il y aura des différences beaucoup plus importantes notamment liées au gestionnaire de paquets `yum`, le nommage des paquets, les configurations par défaut et aux différences dans l'arborescence présente dans /etc.

Dans ce document, je montre la configuration de nombreux types de sites web et services dans un domaine en utilisant ISPConfig.

Sont installés:

* un panel https://www.ispconfig.org/[ISPConfig]
* un configurateur http://www.webmin.com/[Webmin]
* un serveur apache avec sa configuration let's encrypt et les plugins PHP, python et ruby
* un serveur de mail avec antispam, sécurisation d'envoi des mails et autoconfiguration pour Outlook, Thunderbird, Android.
* un webmail https://roundcube.net[roundcube],
* un serveur de mailing list https://www.list.org[mailman],
* un serveur ftp et sftp sécurisé.
* un serveur de base de données et son interface web d'administration https://www.phpmyadmin.net/[phpmyadmin].
* des outils de sécurisation, de mise à jour automatique et d'audit du serveur
* un outil de Monitoring http://munin-monitoring.org/[Munin]
* un outil de Monitoring http://mmonit.com/monit/[Monit]
* un sous domaine pointant sur un site auto-hébergé (l’installation du site n'est pas décrite ici; Se référer à https://yunohost.org[Yunohost]),
* un site CMS sous https://www.joomla.fr/[Joomla],
* un site CMS sous https://www.concrete5.org/[Concrete5],
* un site WIKI sous https://www.mediawiki.org[Mediawiki],
* un site https://wordpress.com[Wordpress],
* un site https://microweber.org/[Microweber],
* un site Photo sous https://piwigo.org/[Piwigo],
* un site Collaboratif sous https://nextcloud.com[Nextcloud],
* un site https://gitea.io[Gitea] et son repository GIT,
* un serveur et un site  de partage de fichiers https://www.seafile.com[Seafile],
* un serveur https://grafana.com/[Grafana], https://prometheus.io/[Prometheus], https://github.com/grafana/loki[Loki], Promtail pour gérer les statistiques et les logs du serveur,
* un serveur de sauvegardes https://www.duplicati.com[Duplicati]
* un serveur de VPN https://pritunl.com/[Pritunl],

Dans ce document nous configurons un nom de domaine principal. Pour la clarté du texte, il sera nommé "example.com". Il est à remplacer évidemment par votre nom de domaine principal.

Je suppose dans ce document que vous savez vous connecter à distance sur un serveur en mode terminal, que vous savez vous servir de `ssh` pour Linux ou de `putty` pour Windows, que vous avez des notions élémentaires de Shell Unix et que vous savez vous servir de l'éditeur `vi`. Si `vi` est trop compliqué pour vous, je vous suggère d'utiliser l'éditeur de commande `nano` à la place et de remplacer `vi` par `nano` dans toutes les lignes de commande.

Dans le document, on peut trouver des textes entourés de <texte>. Cela signifie que vous devez mettre ici votre propre texte selon vos préférences.

A propos des mots de passe: il est conseillé de saisir des mots de passe de 10 caractères contenant des majuscules/minuscules/nombres/caractères spéciaux. Une autre façon de faire est de saisir de longues phrases. Par exemple: 'J'aime manger de la mousse au chocolat parfumée à la menthe'. Ce dernier exemple a un taux de complexité est bien meilleur et les mots de passe classiques. Il est aussi plus facile à retenir que 'Az3~1ym_a&'.

Le coût pour mettre en oeuvre ce type de serveur est relativement faible:
* Compter 15-18€TTC/an pour un nom de domaine classique (mais il peut y avoir des promos)
* Compter 5€TTC/mois pour un VPS de base (2Go de Ram, un coeur, 20Go de SSD). Une machine plus sérieuse sera à 15€/mois (8Go de Ram, 2 coeurs, 80Go de SSD).

Le budget est donc de 6-7€TTC/mois pour une offre d'entrée de gamme. Il faut plus sérieusement compter sur 16€/mois tout compris.

== Choix du VPS

Cette partie du guide s'adresse aux utilisateurs d'OVH.
J'ai pour ma part choisi un serveur VPS SSD chez OVH avec 2Go de RAM. Au moment ou j'écris ce document il possède un seul coeur et 20 Go de disque.

Choisissez d'installer une image Linux seule avec Debian 10.
Une fois l'installation effectuée, vous recevez un Email sur l'adresse mail de votre compte OVH avec vos identifiants de login root. Ils serviront à vous connecter sur le serveur.

En vous loguant sur la https://www.ovh.com/manager/web[plateforme d'administration d'OVH], vous accèderez aux informations de votre serveur dans le menu Server->VPS. A cet endroit votre VPS doit y être indiqué.

En cliquant dessus un ensemble de menus doivent apparaitre pour administrer celui-ci. Vous y trouverez notamment:

* Son adresse <IP> et le nom de la machine chez OVH. Elle est du type "VPSxxxxxx.ovh.net".
* La possibilité de le redémarrer
* La possibilité de le reinstaller (avec perte complète de données)
* un KVM pour en prendre le controle console directement dans le navigateur
* un menu de configuration de reverse DNS (qui nous sera utile par la suite) pour définir le domaine par défaut
* le statut des services principaux (http, ftp, ssh ...)
* enfin des choix pour souscrire à un backup régulier, ajouter des disques ou effecter un snapshot de la VM associée au VPS.

include::../common/registrar_selection.asc[]

include::../common/root_login.asc[]

== Configuration basique

:leveloffset: 1
include::../common/editor_choice.asc[]

include::../common/etc_keeper.asc[]

include::../common/packet_config_vps.asc[]

include::../common/basic_packets.asc[]

include::../common/debfoster_vps.asc[]

include::../common/keeper_file.asc[]

include::../common/autoupdate.asc[]

include::../common/hostname_check.asc[]

include::../common/ipv6.asc[]

include::../common/ban_root_ssh.asc[]

include::../common/ssh_remotekey.asc[]

include::../common/nopass_sudo.asc[]

include::../common/install_dselect.asc[]

include::../common/create_swap.asc[]

:leveloffset: 0
include::../common/initial_install.asc[]

:leveloffset: 1
include::../common/postfix_conf.asc[]

include::../common/mariadb_conf.asc[]

include::../common/apache_conf.asc[]

include::../common/mailman_conf.asc[]

include::../common/awstats_conf.asc[]

include::../common/fail2ban_conf.asc[]

include::../common/pureftp_conf.asc[]



=== Installation et configuration de phpmyadmin

. Installez phpmyadmin. Exécutez:
+
[source,bash]
----
mkdir /usr/share/phpmyadmin
mkdir /etc/phpmyadmin
mkdir -p /var/lib/phpmyadmin/tmp
chown -R www-data:www-data /var/lib/phpmyadmin
touch /etc/phpmyadmin/htpasswd.setup
cd /tmp
wget https://files.phpmyadmin.net/phpMyAdmin/4.9.0.1/phpMyAdmin-4.9.0.1-all-languages.tar.gz
tar xfz phpMyAdmin-4.9.0.1-all-languages.tar.gz
mv phpMyAdmin-4.9.0.1-all-languages/* /usr/share/phpmyadmin/
rm phpMyAdmin-4.9.0.1-all-languages.tar.gz
rm -rf phpMyAdmin-4.9.0.1-all-languages
cp /usr/share/phpmyadmin/config.sample.inc.php  /usr/share/phpmyadmin/config.inc.php
----
+
. Éditez le fichier :
+
[source,bash]
----
vi /usr/share/phpmyadmin/config.inc.php
----
.. Modifier l’entrée `blowfish_secret` en ajoutant votre propre chaîne de 32 caractères.
.. Éditez le fichier: :
+
[source,bash]
----
vi /etc/apache2/conf-available/phpmyadmin.conf
----
.. Ajoutez les lignes suivantes:
+
[source,apache]
----
# phpMyAdmin default Apache configuration

Alias /phpmyadmin /usr/share/phpmyadmin

<Directory /usr/share/phpmyadmin>
 Options FollowSymLinks
 DirectoryIndex index.php

 <IfModule mod_php7.c>
 AddType application/x-httpd-php .php

 php_flag magic_quotes_gpc Off
 php_flag track_vars On
 php_flag register_globals Off
 php_value include_path .
 </IfModule>

</Directory>

# Authorize for setup
<Directory /usr/share/phpmyadmin/setup>
 <IfModule mod_authn_file.c>
 AuthType Basic
 AuthName "phpMyAdmin Setup"
 AuthUserFile /etc/phpmyadmin/htpasswd.setup
 </IfModule>
 Require valid-user
</Directory>

# Disallow web access to directories that don't need it
<Directory /usr/share/phpmyadmin/libraries>
 Order Deny,Allow
 Deny from All
</Directory>
<Directory /usr/share/phpmyadmin/setup/lib>
 Order Deny,Allow
 Deny from All
</Directory>
----
+
. Activez le module et redémarrez apache. Tapez :
+
[source,bash]
----
a2enconf phpmyadmin
systemctl restart apache2
----
. Créer la base de donnée phpmyadmin.
.. Tapez :
+
[source,bash]
----
mysql -u root -p
----
puis entrer le mot de passe root
.. Créez une base phpmyadmin. Tapez :
+
[source,sql]
----
CREATE DATABASE phpmyadmin;
----
.. Créez un utilisateur phpmyadmin. Tapez :
+
[source,sql]
----
CREATE USER 'pma'@'localhost' IDENTIFIED BY 'mypassword'; <1>
----
<1> `mypassword` doit être remplacé par un mot de passe choisi.

.. Accordez des privilèges et sauvez:
+
[source,sql]
----
GRANT ALL PRIVILEGES ON phpmyadmin.* TO 'pma'@'localhost' IDENTIFIED BY 'mypassword' WITH GRANT OPTION; <1>
----
<1> `mypassword` doit être remplacé par un mot de passe choisi.
.. Flusher les privilèges: 
+
[source,sql]
----
FLUSH PRIVILEGES;
----
.. et enfin
+
[source,sql]
----
EXIT;
----
. Chargez les tables sql dans la base phpmyadmin:
+
[source,bash]
----
mysql -u root -p phpmyadmin < /usr/share/phpmyadmin/sql/create_tables.sql
----
. Enfin ajoutez les mots de passe nécessaires dans le fichier de config.
.. Tapez:
+
[source,bash]
----
vi /usr/share/phpmyadmin/config.inc.php
----
.. Rechercher le texte contenant `controlhost` .  Ci-dessous, un exemple:
+
[source,php]
----
/* User used to manipulate with storage */
$cfg['Servers'][$i]['controlhost'] = 'localhost';
$cfg['Servers'][$i]['controlport'] = '';
$cfg['Servers'][$i]['controluser'] = 'pma';
$cfg['Servers'][$i]['controlpass'] = 'mypassword'; <1>


/* Storage database and tables */
$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';
$cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';
$cfg['Servers'][$i]['relation'] = 'pma__relation';
$cfg['Servers'][$i]['table_info'] = 'pma__table_info';
$cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';
$cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';
$cfg['Servers'][$i]['column_info'] = 'pma__column_info';
$cfg['Servers'][$i]['history'] = 'pma__history';
$cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';
$cfg['Servers'][$i]['tracking'] = 'pma__tracking';
$cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';
$cfg['Servers'][$i]['recent'] = 'pma__recent';
$cfg['Servers'][$i]['favorite'] = 'pma__favorite';
$cfg['Servers'][$i]['users'] = 'pma__users';
$cfg['Servers'][$i]['usergroups'] = 'pma__usergroups';
$cfg['Servers'][$i]['navigationhiding'] = 'pma__navigationhiding';
$cfg['Servers'][$i]['savedsearches'] = 'pma__savedsearches';
$cfg['Servers'][$i]['central_columns'] = 'pma__central_columns';
$cfg['Servers'][$i]['designer_settings'] = 'pma__designer_settings';
$cfg['Servers'][$i]['export_templates'] = 'pma__export_templates';
----
<1> A tous les endroit ou vous voyez dans le texte ci dessus le mot `mypassword` mettez celui choisi. N'oubliez pas de dé-commenter les lignes.

=== Installation et configuration de Roundcube

. Tapez:
+
[source,bash]
----
apt-get install roundcube roundcube-core roundcube-mysql roundcube-plugins
----
. Répondez aux question
** `Utiliser dbconfig_common` <- Répondre `Oui`
** `Mot de passe Mysql pour db Roundcube` <- Tapez un mot de passe
. Éditez le fichier php de roundcube: :
+
[source,bash]
----
vi /etc/roundcube/config.inc.php
----
et définissez les hosts par défaut comme localhost
+
[source,php]
----
$config['default_host'] = 'localhost';
$config['smtp_server'] = 'localhost';
----
. Éditez la configuration apache pour roundcube: :
+
[source,bash]
----
vi /etc/apache2/conf-enabled/roundcube.conf
----
et ajouter au début les lignes suivantes:
+
[source,apache]
----
Alias /roundcube /var/lib/roundcube
Alias /webmail /var/lib/roundcube
----

. Redémarrez Apache:
+
[source,bash]
----
systemctl reload apache2
----

=== Installation de Let's Encrypt

Installez Let's Encrypt. Tapez:
[source,bash]
----
cd /usr/local/bin
wget https://dl.eff.org/certbot-auto
chmod a+x certbot-auto
./certbot-auto --install-only
----

=== Installation d'un scanner de vulnérabilités

. installer Git. Tapez :
+
[source,bash]
----
apt install git
----
. installer Lynis
.. Tapez :
+
[source,bash]
----
cd
git clone https://github.com/CISOfy/lynis
----
.. Executez :
+
[source,bash]
----
cd lynis;./lynis audit system
----
. L'outil vous listera dans une forme très synthétique la liste des vulnérabilités et des améliorations de sécurité à appliquer.

== Installation d'un Panel

Il existe plusieurs type de panel de contrôle pour les VPS. La plupart sont payant.

Pour citer les plus connus:

* payant: cPanel (leader du type), Plesk
* gratuit: Yunohost ( un excellent système d'autohébergement packagé) , Ajenti, Froxlor, Centos web panel, Webmin et Usermin, ISPConfig, HestiaCP, VestaCP , 

Ci après nous allons en présenter 3 différents (ISPConfig, Webmin et HestiaCP). Ils sont incompatibles entre eux.

On peut faire cohabiter ISPConfig et Webmin en prenant les précautions suivantes:

* ISPConfig est le maitre de la configuration: toute modification sur les sites webs, mailboxes et DNS doit impérativement être effectuées du coté d'ISPConfig
* Les modifications réalisées au niveau de webmin pour ces sites webs, mailboxes et DNS seront au mieux écrasées par ISPConfig au pire elles risquent de conduire à des incompatibilités qui engendreront des dysfonctionnement d'ISPConfig (impossibilité de mettre à jour les configurations)
* Le reste des modifications peuvent être configurées au niveau de webmin sans trop de contraintes.

Pour rappel, HestiaCP (tout comme VestaCP) sont incompatibles d'ISPConfig et de Webmin. Ils doivent être utilisés seuls

=== Installation et configuration de ISPConfig

ISPConfig est un système de configuration de sites web totalement compatible avec Webmin.

Pour installer ISPConfig, vous devez suivre la procédure ci-dessous. ISPConfig 3.1 a été utilisé dans ce tutoriel.

. Tapez:
+
[source,bash]
----
cd /tmp
----
. Cherchez la dernière version d'ISPConfig sur le site https://www.ispconfig.org/ispconfig/download/[ISPConfig]
. Installez cette version en tapant: :
+
[source,bash]
----
wget <la_version_a_telecharger>.tar.gz
----
. Décompressez la version en tapant: :
+
[source,bash]
----
tar xfz <la_version>.tar.gz
----
. Enfin allez dans le répertoire d'installation: :
+
[source,bash]
----
cd ispconfig3_install/install/
----
. Lancez l'installation: :
+
[source,bash]
----
php -q install.php
----
et répondez aux questions:
.. `Select language (en,de) [en]:` <- Tapez entrée
.. `Installation mode (standard,expert) [standard]:` <- Tapez entrée
.. `Full qualified hostname (FQDN) of the server, eg server1.domain.tld [server1.example.com]:` <- Tapez entrée
.. `MySQL server hostname [localhost]:` <- Tapez entrée
.. `MySQL server port [3306]:` <- Tapez entrée
.. `MySQL root username [root]:` <- Tapez entrée
.. `MySQL root password []:` <- Enter your MySQL root password
.. `MySQL database to create [dbispconfig]:` <- Tapez entrée
.. `MySQL charset [utf8]:` <- Tapez entrée
.. `Country Name (2 letter code) [AU]:` <- Entrez le code pays à 2 lettres
.. `State or Province Name (full name) [Some-State]:` <- Entrer le nom d'état
.. `Locality Name (eg, city) []:` <- Entrer votre ville
.. `Organization Name (eg, company) [Internet Widgits Pty Ltd]:` <- Entrez votre entreprise ou tapez entrée
.. `Organizational Unit Name (eg, section) []:` <- Tapez entrée
.. `Common Name (e.g. server FQDN or YOUR name) []:` <- Enter le nom d'hôte de votre serveur. Dans notre cas: server1.example.com
.. `Email Address []:` <- Tapez entrée
.. `ISPConfig Port [8080]:` <- Tapez entrée
.. `Admin password [admin]:` <- Tapez entrée
.. `Do you want a secure (SSL) connection to the ISPConfig web interface (y,n) [y]:` <-- Tapez entrée
.. `Country Name (2 letter code) [AU]:` <- Entrez le code pays à 2 lettres
.. `State or Province Name (full name) [Some-State]:` <- Entrer le nom d'état
.. `Locality Name (eg, city) []:` <- Entrer votre ville
.. `Organization Name (eg, company) [Internet Widgits Pty Ltd]:` <- Entrez votre entreprise ou tapez entrée
.. `Organizational Unit Name (eg, section) []:` <- Tapez entrée
.. `Common Name (e.g. server FQDN or YOUR name) []:` <- Enter le nom d'hôte de votre serveur. Dans notre cas: server1.example.com
.. `Email Address []:` <- Tapez entrée
. Sécurisez Apache
.. Il est maintenant recommandé de désactiver les protocoles TLS 1.0 et TLS 1.1. Ce n'est pas la configuration par défaut d'ISPconfig
.. <<#root_login, Loguez vous comme root sur le serveur>>.
.. Copier le fichier `vhost.conf.master` dans la zone custom
+
[source,bash]
----
cp /usr/local/ispconfig/server/conf/vhost.conf.master /usr/local/ispconfig/server/conf-custom/vhost.conf.master
----
.. Editer le fichier dans la zone custom. Tapez:
+
[source,bash]
----
vi /usr/local/ispconfig/server/conf-custom/vhost.conf.master
----
.. Remplacez la ligne `SSLProtocol All` par:
+
[source,ini]
----
SSLProtocol All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
----
. L'installation est terminée. Vous accédez au serveur à l'adresse: https://example.com:8080/ .
+
[NOTE]
Lors de votre première connexion, votre domaine n'est pas encore configuré. Il faudra alors utiliser le nom DNS donné par votre hébergeur. Pour OVH, elle s'écrit VPSxxxxxx.ovh.net
. Loguez vous comme admin et avec le mot de passe que vous avez choisi. Vous pouvez décider de le changer au premier login
+
[NOTE]
Si le message "Possible attack detected. This action has been logged.". Cela signifie que vous avez des cookies d'une précédente installation qui sont configurés. Effacer les cookies de ce site de votre navigateur.

=== Installation de Webmin

Webmin est un outil généraliste de configuration de votre serveur. Son usage peut être assez complexe mais il permet une configuration plus précise des fonctionnalités.

. <<#root_login, Loguez vous comme root sur le serveur>>
. Ajoutez le repository Webmin
.. allez dans le répertoire des repositories. Tapez :
+
[source,bash]
----
cd /etc/apt/sources.list.d
----
.. Tapez: :
+
[source,bash]
----
echo "deb http://download.webmin.com/download/repository sarge contrib" >> webmin.list
----
.. Ajoutez la clé. Tapez :
+
[source,bash]
----
curl -fsSL http://www.webmin.com/jcameron-key.asc | sudo apt-key add -
----
Le message `OK` s'affiche
. Mise à jour. Tapez :
+
[source,bash]
----
apt update
----
. Installation de Webmin. Tapez :
+
[source,bash]
----
apt install webmin
----
 Débloquez le port 10000 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 10000
.. Cliquez sur `save`
. Connectez vous avec votre navigateur sur l'url https://<example.com>:10000. Un message indique un problème de sécurité. Cela vient du certificat auto-signé. Cliquez sur 'Avancé' puis 'Accepter le risque et poursuivre'.
. Loguez-vous `root`. Tapez le mot de passe de `root`. Le dashboard s'affiche.
. Restreignez l'adressage IP
.. Obtenez votre adresse IP en allant par exemples sur le site https://www.showmyip.com/
.. Sur votre URL Webmin ou vous êtes logué, allez dans Webmin->Webmin Configuration
.. Dans l'écran choisir l’icône `Ip Access Control`.
.. Choisissez `Only allow from listed addresses`
.. Puis dans le champ `Allowed IP addresses` tapez votre adresse IP récupérée sur showmyip
.. Cliquez sur `Save`
.. Vous devriez avoir une brève déconnexion le temps que le serveur Webmin redémarre puis une reconnexion.
. Si vous n'arrivez pas à vous reconnecter c'est que l'adresse IP n'est pas la bonne. Le seul moyen de se reconnecter est de:
.. <<#root_login, Loguez vous comme root sur le serveur>>
.. Éditez le fichier /etc/webmin/miniserv.conf et supprimez la ligne `allow= ...`
.. Tapez :
+
[source,bash]
----
service webmin restart
----
.. Connectez vous sur l'url de votre site Webmin. Tout doit fonctionner
. Passez en Français. Pour les personnes non anglophone. Les traductions française ont des problèmes d'encodage de caractère ce n'est donc pas recommandé. La suite de mon tutoriel suppose que vous êtes resté en anglais.
.. Sur votre url Webmin ou vous êtes logué, allez dans Webmin->Webmin Configuration
.. Dans l'écran choisir l’icône `Language and Locale`.
.. Choisir `Display Language` à `French (FR.UTF-8)`

[#domain-config]
== Configuration d'un domaine

Cette configuration est réalisée avec le Panel ISPConfig installé dans le chapitre précédent.
L'étape "login initial" n'est à appliquer qu'une seule fois. Une fois votre premier domaine configuré, vous pourrez vous loguer à ISPconfig en utilisant ce domaine à l'adresse: https://example.com:8080/ .

=== Login initial

[NOTE]
Cette procédure n'est à appliquer que lorsqu'aucun domaine n'est encore créé.

Vous devrez tout d'abord vous loguer sur le serveur ISPConfig.
Comme vous n'avez pas encore configuré de nom de de domaine, vous devrez vous loguer de prime abord sur le site http://vpsxxxxxx.ovh.net:8080/ .

Utiliser le login: Admin et le mot de passe que vous avez configuré lors de l'installation d'ISPConfig

. Aller dans la rubrique `System`
.. Dans le menu `Main config`
... Dans l’onglet `Sites`, configurer:
.... `Create subdomains as web site:` <- Yes
.... `Create aliasdomains as web site:` <- Yes
... Dans l'onglet `Mail` :
.... `Administrator's e-mail :` <- adresse mail de l’administrateur. par exemple admin@example.com
.... `Administrator's name :` <- nom de l’administrateur
.. Dans le menu `Firewall`
... Cliquez sur `Add Firewall Record`
... Acceptez les valeurs par défaut en cliquant sur `Save`
. Aller dans la rubrique `DNS`
.. Dans le menu `Template`
... Cliquez sur `Add new record`
... Remplissez les champs comme ci-après:
**** `Name` <- Tapez `Template IPV4 autoNS`
**** `Fields` <- Cochez `Domain`, `IP Address`, `Email`, `DKIM`, `DNSSEC`
**** `Template` <- remplissez comme ci dessous:
+
[source,bash]
----
[ZONE]
origin={DOMAIN}.
ns=ns1.{DOMAIN}.
mbox={EMAIL}.
refresh=7200
retry=540
expire=604800
minimum=3600
ttl=3600

[DNS_RECORDS]
A|{DOMAIN}.|{IP}|0|3600
A|www|{IP}|0|3600
A|mail|{IP}|0|3600
A|autoconfig|{IP}|0|3600
A|autodiscover|{IP}|0|3600
A|webmail|{IP}|0|3600
A|ns1|{IP}|0|3600
CNAME|ftp|{DOMAIN}|0|3600
CNAME|smtp|{DOMAIN}|0|3600
CNAME|pop3|{DOMAIN}|0|3600
CNAME|imap|{DOMAIN}|0|3600
SRV|_pop3._tcp|0 0 .|0|3600
SRV|_imap._tcp|0 0 .|0|3600
SRV|_pop3s._tcp|1 995 mail.{DOMAIN}|0|3600
SRV|_imaps._tcp|1 993 mail.{DOMAIN}|0|3600
SRV|_submission._tcp|1 465 mail.{DOMAIN}|0|3600
SRV|_autodiscover._tcp|1 443 autodiscover.{DOMAIN}|0|3600
NS|{DOMAIN}.|ns1.{DOMAIN}.|0|3600
MX|{DOMAIN}.|mail.{DOMAIN}.|10|3600
TXT|{DOMAIN}.|v=spf1 mx a ~all|0|3600
----
... Cliquez sur `Save`
... Cliquez sur `Add new record`
... Remplissez les champs comme ci-après:
**** `Name` <- Tapez `Template IPV6 autoNS`
**** `Fields` <- Cochez `Domain`, `IP Address`, `IPV6 Address`, `Email`, `DKIM`, `DNSSEC`
**** `Template` <- remplissez comme ci dessous:
+
[source,bash]
----
[ZONE]
origin={DOMAIN}.
ns=ns1.{DOMAIN}.
mbox={EMAIL}.
refresh=7200
retry=540
expire=604800
minimum=3600
ttl=3600

[DNS_RECORDS]
A|{DOMAIN}.|{IP}|0|3600
A|www|{IP}|0|3600
A|mail|{IP}|0|3600
A|autoconfig|{IP}|0|3600
A|autodiscover|{IP}|0|3600
A|webmail|{IP}|0|3600
A|ns1|{IP}|0|3600
AAAA|{DOMAIN}.|{IPV6}|0|3600
AAAA|www|{IPV6}|0|3600
AAAA|mail|{IPV6}|0|3600
AAAA|autoconfig|{IPV6}|0|3600
AAAA|autodiscover|{IPV6}|0|3600
AAAA|webmail|{IPV6}|0|3600
AAAA|ns1|{IPV6}|0|3600
CNAME|ftp|{DOMAIN}|0|3600
CNAME|smtp|{DOMAIN}|0|3600
CNAME|pop3|{DOMAIN}|0|3600
CNAME|imap|{DOMAIN}|0|3600
SRV|_pop3._tcp|0 0 .|0|3600
SRV|_imap._tcp|0 0 .|0|3600
SRV|_pop3s._tcp|1 995 mail.{DOMAIN}|0|3600
SRV|_imaps._tcp|1 993 mail.{DOMAIN}|0|3600
SRV|_submission._tcp|1 465 mail.{DOMAIN}|0|3600
SRV|_autodiscover._tcp|1 443 autodiscover.{DOMAIN}|0|3600
NS|{DOMAIN}.|ns1.{DOMAIN}.|0|3600
MX|{DOMAIN}.|mail.{DOMAIN}.|10|3600
TXT|{DOMAIN}.|v=spf1 mx a ~all|0|3600
----
[NOTE]
Il est possible de basculer le site ISPConfig entièrement en Français. J'ai pour ma part gardé la version anglaise du site.
Vous trouverez donc tous les libellés dans la suite de la documentation en anglais.

=== Création de la zone DNS d'un domaine

. Allez dans `DNS`
.. Cliquez sur `Add dns-zone`
.. Cliquez sur `Dns zone wizard`
.. Choisir le template `IPV4 autoNS` ou`IPV6 autoNS` selon que vous soyez IPV4 ou IPV4+V6
.. Remplissez les champs:
*** `Domain :` <- tapez le nom de votre domaine `example.com`
*** `IP Address:` <- prendre l’adresse IPV4 du serveur sélectionnée
*** `IPV6 Address:` <- prendre l’adresse IPV6 du serveur sélectionnée
*** `Email:` <- votre Email valide exemple admin@example.com
*** `DKIM:` <- Yes
.. Cliquez sur `Create DNS-record`

Attendez quelques minutes le temps que les enregistrements DNS se propagent et faites une essai de votre nom de domaine sur le site https://zonemaster.fr/domain_check[ZoneMaster].

Dans le champ Nom de domaine saisissez votre nom de domaine et tapez sur check. Tout doit est OK sauf pour les serveurs de noms ns1 et ns2. Si ce n'est pas le cas, votre nom de domaine doit être mal configuré chez votre registrar. Il vous faut vérifier la configuration initiale.

[NOTE]
Zonemaster a bien repéré que l'on a essayé de mettre des noms de host différents pour les serveurs de DNS. Ils ont cependant tous la même adresse IP. Cela apparait comme une erreur suite au test.
De la même manière, il indique dans la rubrique connectivité qu'il n'y a pas de redondance de serveur DNS.
Une manière de corriger ce problème est de définir un DNS secondaire chez OVH en utilisant le service qu'ils mettent à disposition.

Vous pouvez maintenant essayer les différents Hostname munis de leur nom de domaine dans votre navigateur. Par exemple: http://webmail.example.com

Ils doivent afficher une page web basique (Apache2, ou de parking).Si ce n'est pas le cas revérifier la configuration du DNS dans ISPConfig.

=== Activation de DNSSEC

Vous pouvez maintenant activer DNSSEC afin d'augmenter la sécurité de résolution de nom de domaine:

. Allez dans la rubrique `DNS`
.. puis dans le menu `Zones`
.. choisissez la zone correspondant à votre domaine
.. dans l'onglet `DNS Zone` allez tout en bas et activer la coche `Sign Zone (DNSSEC)`
.. cliquez sur `Save`
.. Une fois fait, retourner dans le même onglet. La boite `DNSSEC DS-Data for registry: `contient les informations que vous devez coller dans le site web de votre registrar pour sécuriser votre zone.
.. Gardez cette fenêtre ouverte dans votre navigateur et ouvrez un autre onglet sur le site de votre registrar.

Si vous êtes chez https://admin.gandi.net/[Gandi], il vous faut:

. Sélectionner le menu `nom de domaine`
. Choisir votre nom de domaine "example.com"
. Allez dans l'onglet DNSSEC. Il doit permettre d'ajouter des clés puisque vous fonctionner avec des DNS externes.
. Effacez éventuellement toutes les clés si vous n'êtes pas sur de celles-ci.
. puis cliquez sur `Ajouter une clé externe`
.. Sélectionnez d'abord le flag `257 (KSK)`. puis l'algorithme `7 (RSASHA1-NSEC3-SHA1)`
.. Collez ensuite la clé de votre site ISPConfig. Elle doit ressembler à cela:
+
----
example.com. IN DNSKEY 257 3 7 AwEAAcs+xTC5GlyC8CSufM9U7z5uazLNmNP3vG2txzNIGM1VJHWCpRYQVZjsBZqx5vZuOFBwp0F6cpF8YdW9QibZc82UAeIYAstgRSwnCLYsIV+3Zq0NpCcnGTkPLknxxZuN3MD5tARkxBM5c5fME0NgMU+kcx4xaTVm2Go6bEeFuhgNfRogzXKqLV6h2bMCajudfJbbTbJlehym2YegLI+yYCpYr6b+jWHorRoUVDJ41OPXLtz2s8wtycyINpZsdmLNJhNNaeGqOok3+c5uazLNmNP3vG2txzNIGLM1VJHWCpRYQVZjsBZkqx5vZuOFBgwp0F6cpF8YdW9QbZc82UAeIYAstKgRSwnCLYsIV+3Zq0NpCcnGTkPLkn
----
.. Cliquez sur `Ajouter`
.. Entrez la deuxième clé. Cliquez sur `Ajouter une clé externe`
.. Sélectionnez d'abord le flag `256 (ZSK)`. puis l'algorithme `7 (RSASHA1-NSEC3-SHA1)`
.. Collez ensuite la clé de votre site ISPConfig. Elle doit ressembler à cela:
+
----
example.com. IN DNSKEY 256 3 7 AwEAAcs+xTC5GlyC8CSufM9U7z5uazLNmNP3vG2txzNIGM1VJHWCpRYQVZjsBZqx5vZuOFBwp0F6cpF8YdW9QibZc82UAeIYAstgRSwnCLYsIV+3Zq0NpCcnGTkPLknxxZuN3MD5tARkxBM5c5fME0NgMU+kcx4xaTVm2Go6bEeFuhgNfRogzXKqLV6h2bMCajudfJbbTbJlehym2YegLI+yYCpYr6b+jWHorRoUVDJ41OPXLtz2s8wtycyINpZsdmLNJhNNaeGqOok3+c5uazLNmNP3vG2txzNIGLM1VJHWCpRYQVZjsBZkqx5vZuOFBgwp0F6cpF8YdW9QbZc82UAeIYAstKgRSwnCLYsIV+3Zq0NpCcnGTkPLkn
----
.. Cliquez sur `Ajouter`
.. Les deux clés doivent maintenant apparaître dans l'onglet `DNSSEC`
.. Vous devez attendre quelques minutes (une heure dans certains cas) pour que les clés se propagent. Pendant ce temps vous pouvez avoir quelques problèmes d'accès à vos sites webs
.. Allez sur le site https://dnssec-debugger.verisignlabs.com/[DNSSEC Analyzer].
.. Entrez votre nom de domaine "example.com" et tapez sur "entrée".

Le site doit afficher pour les différentes zones le statut des certificats. Tout doit être au vert.
Si ce n'est pas le cas, réessayer dans une heure. S'il y a encore des problèmes vérifiez votre configuration dans ISPConfig, chez votre registrar (rubrique DNSSEC) ou regardez les logs d'ISPConfig sur votre serveur pour y débusquer une erreur.

[TIP]
Une erreur classique est de croiser les certificats avec leurs types. Vérifiez bien que vous avez mis les bons certificats avec les bons types.


[WARNING]
Une fois que vous activez DNSSEC, vous pourriez faire face au problème suivant: les nouveaux enregistrements que vous renseignez ne sont pas actifs.
Une analyse des logs montre que la commande `dnssec-signzone` retourne l'erreur `fatal: 'example.com': found DS RRset without NS RRset`.
Cela signifie que vous avez saisi une ou deux entrées DS dans vos enregistrements. Il faut les supprimer pour que tout redevienne fonctionnel.

=== Exemple de configuration de domaine

Une fois la configuration terminé, les différents enregistrements du domaines ressemblent à l'exemple ci-dessous.
Il peut y avoir des enregistrements supplémentaires pour les configurations SPF, DKIM et Let's encrypt.

-----
example.com.         3600 A              1.2.3.4
www                  3600 A              1.2.3.4
mail                 3600 A              1.2.3.4
ns1                  3600 A              1.2.3.4
ns2                  3600 A              1.2.3.4
webmail              3600 A              1.2.3.4
autoconfig           3600 A              1.2.3.4
autodiscover         3600 A              1.2.3.4
ftp                  3600 CNAME          example.com.
smtp                 3600 CNAME          mail.example.com.
pop3                 3600 CNAME          mail.example.com.
imap                 3600 CNAME          mail.example.com.
example.com.         3600 NS             ns1.example.com.
example.com.         3600 NS             ns2.example.com.
example.com.         3600 MX    10       mail.example.com.
_pop3s._tcp          3600 SRV   10 1 995 mail.example.com.
_imaps._tcp          3600 SRV   0  1 993 mail.example.com.
_submission._tcp     3600 SRV   0  1 465 mail.example.com.
_imap._tcp           3600 SRV   0  0 0   .
_pop3._tcp           3600 SRV   0  0 0   .
_autodiscover._tcp   3600 SRV   0 0 443  autoconfig.example.com.
example.com.         3600 TXT            "v=spf1 mx a ~all"
-----

[#domain-site]
=== Création d’un site web

Dans la suite le site web sera nommé "example.com".

Vous devez avoir avant tout défini le "record" DNS associé au site.

. Aller dans "Sites"
.. Aller dans le menu "Website" pour définir un site web
... Cliquez sur "Add new website"
... Saisissez les informations:
**** `Domain:` <- mettre `example.com`
**** `Auto-subdomain:` <- sélectionner `wwww` ou `*` si l’on veut un certificat let’s encrypt wildcard
**** `SSL:` <- yes
**** `Let’s Encrypt:` <- yes
**** `Php:` <- Sélectionez `php-fpm`
**** Sélectionnez éventuellement aussi les coches `Perl`, `Python`, `Ruby` en fonction des technologies déployées sur votre site. Cela est indiqué dans la procédure d'installation du site.
... Dans l’onglet `redirect` du même écran
**** `SEO Redirect:` <- Sélectionner `domain.tld =>www.domain.tld`
**** `Rewrite http to https:` <- yes
... Dans l’onglet `Statistics` du même écran
**** `Set Webstatistics password:` <- saisissez un mot de passe
**** `Repeat Password:` <- ressaisissez le mot de passe
... Dans l’onglet `Backup` du même écran
**** `Backup interval:` <- saisir `weekly`
**** `Number of backup copies:` <- saisir `1`
... Dans l'onglet `Options`, il peut être utile pour certains types de site qui sont des redirections d'autres sites de saisir dans la zone `Apache Directives:`
+
[source, apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# redirect from server
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost[:port_number_if_any]/[path_if_any]
ProxyPassReverse / http://localhost[:port_number_if_any]/[path_if_any]
----
. Vous pouvez maintenant tester la qualité de la  connexion de votre site en allant sur: https://www.ssllabs.com/ssltest[SSL Server Test]. Saisissez votre nom de domaine et cliquez sur `Submit`. Votre site doit au moins être de `Grade A`.

[#subdomain-site]
=== Création d’un Site Vhost

Dans la suite le sous-domaine sera nommé "mail.example.com".

Vous devez avoir avant tout défini le "record" DNS associé au site.
Vous ne pouvez définir un sous-domaine que si vous avez défini le site web racine auparavant.

. Aller dans "Sites"
.. Aller dans le menu "Subdomain(vhost)" pour définir un sous-domaine
... Cliquez sur "Add Subdomain" pour un nouveau sous domaine
... Saisissez les informations:
**** `Hostname:` <-  saisir `mail` 
**** `Domain:` <- mettre `example.com`
**** `web folder:` <- saisir `mail`
**** `Auto-subdomain:` <- sélectionner `wwww` ou `*` si l’on veut un certificat let’s encrypt wildcard
**** `SSL:` <- yes
**** `Let’s Encrypt:` <- yes
**** `Php:` <- Sélectionez `php-fpm`
**** Sélectionnez éventuellement aussi les coches `Perl`, `Python`, `Ruby` en fonction des technologies déployées sur votre site. Cela est indiqué dans la procédure d'installation du site.
... Dans l’onglet `redirect` du même écran
**** `Rewrite http to https:` <- yes
... Dans l’onglet `Statistics` du même écran
**** `Set Webstatistics password:` <- saisissez un mot de passe
**** `Repeat Password:` <- ressaisissez le mot de passe
... Dans l'onglet `Options`, il peut être utile pour certains types de site qui sont des redirections d'autres sites de saisir dans la zone `Apache Directives:`
+
[source, apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# redirect from server
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost[:port_number_if_any]/[path_if_any]
ProxyPassReverse / http://localhost[:port_number_if_any]/[path_if_any]
----
. Vous pouvez maintenant tester la qualité de la  connexion de votre site en allant sur: https://www.ssllabs.com/ssltest[SSL Server Test]. Saisissez votre nom de domaine et cliquez sur `Submit`. Votre site doit au moins être de `Grade A`.

=== Associer des certificats reconnu à vos outils

Comme vous avec créé votre premier domaine avec SSL et let's encrypt dans ISPConfig, vous pouvez maintenant, affecter ce certificat aux services de base:

. Vous devez avoir créé au préalable un site pour les domaines example.com et mail.example.com
. <<#root_login, Loguez vous comme root sur le serveur>>
. Liez le certificat d'ISPconfig avec celui du domaine crée.
** Tapez :
+
[source,bash]
----
cd /usr/local/ispconfig/interface/ssl/
mv ispserver.crt ispserver.crt-$(date +"%y%m%d%H%M%S").bak
mv ispserver.key ispserver.key-$(date +"%y%m%d%H%M%S").bak
ln -s /etc/letsencrypt/live/example.com/fullchain.pem ispserver.crt <1>
ln -s /etc/letsencrypt/live/example.com/privkey.pem ispserver.key <1>
cat ispserver.{key,crt} > ispserver.pem
chmod 600 ispserver.pem
systemctl restart apache2
----
<1> remplacer <example.com> par votre nom de domaine

. Liez le certificat Postfix et Dovecot avec celui de let's encrypt
** Tapez :
+
[source,bash]
----
cd /etc/postfix/
mv smtpd.cert smtpd.cert-$(date +"%y%m%d%H%M%S").bak
mv smtpd.key smtpd.key-$(date +"%y%m%d%H%M%S").bak
ln -s /etc/letsencrypt/live/mail.example.com/fullchain.pem smtpd.cert <1>
ln -s /etc/letsencrypt/live/mail.example.com/privkey.pem smtpd.key <1>
service postfix restart
service dovecot restart
----
<1> remplacer <example.com> par votre nom de domaine
. Liez le certificat pour Pureftd
** Tapez :
+
[source,bash]
----
cd /etc/ssl/private/
mv pure-ftpd.pem pure-ftpd.pem-$(date +"%y%m%d%H%M%S").bak
ln -s /usr/local/ispconfig/interface/ssl/ispserver.pem pure-ftpd.pem
chmod 600 pure-ftpd.pem
service pure-ftpd-mysql restart
----
. Création d'un script de renouvellement automatique du fichier pem
.. Installez incron. Tapez :
+
[source,bash]
----
apt install -y incron
----
.. Créez le fichier d'exécution périodique. Tapez :
+
[source,bash]
----
vi /etc/init.d/le_ispc_pem.sh
----
et coller dans le fichier le code suivant:
+
[source,bash]
-----
#!/bin/sh
### BEGIN INIT INFO
# Provides: LE ISPSERVER.PEM AUTO UPDATER
# Required-Start: $local_fs $network
# Required-Stop: $local_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: LE ISPSERVER.PEM AUTO UPDATER
# Description: Update ispserver.pem automatically after ISPC LE SSL certs are renewed.
### END INIT INFO
cd /usr/local/ispconfig/interface/ssl/
mv ispserver.pem ispserver.pem-$(date +"%y%m%d%H%M%S").bak
cat ispserver.{key,crt} > ispserver.pem
chmod 600 ispserver.pem
chmod 600 /etc/ssl/private/pure-ftpd.pem
service pure-ftpd-mysql restart
service monit restart
service postfix restart
service dovecot restart
service apache2 restart
exit 1
-----
.. Sauvez et quittez. Tapez ensuite:
+
[source,bash]
----
chmod +x /etc/init.d/le_ispc_pem.sh
echo "root" >> /etc/incron.allow
incrontab -e.
----
et ajoutez les lignes ci dessous dans le fichier:
+
[source,bash]
-----
/etc/letsencrypt/archive/example.com/ IN_MODIFY /etc/init.d/le_ispc_pem.sh <1>
-----
<1> Remplacer example.com par votre nom de domaine.

== Surveillance du serveur avec Munin et Monit

=== Note préliminaire

Installez tout d'abord les paquets insdispensables pour faire fonctionner Munin avec Apache puis activez le module fcgid:

[source,bash]
----
apt-get install apache2 libcgi-fast-perl libapache2-mod-fcgid
a2enmod fcgid
----

=== Installation et configuration de Munin

Suivez les étapes ci-après:

. Installer le paquet Munin:
+
[source,bash]
----
apt-get install munin munin-node munin-plugins-extra logtail libcache-cache-perl
----
. Votre configuration de Munin va utiliser une base de données MariaDB. Vous devez activer quelques plugins. Tapez:
+
[source,bash]
----
cd /etc/munin/plugins
ln -s /usr/share/munin/plugins/mysql_ mysql_
ln -s /usr/share/munin/plugins/mysql_bytes mysql_bytes
ln -s /usr/share/munin/plugins/mysql_innodb mysql_innodb
ln -s /usr/share/munin/plugins/mysql_isam_space_ mysql_isam_space_
ln -s /usr/share/munin/plugins/mysql_queries mysql_queries
ln -s /usr/share/munin/plugins/mysql_slowqueries mysql_slowqueries
ln -s /usr/share/munin/plugins/mysql_threads mysql_threads
----
. Créez la base de données MariaDB de Munin. Tapez:
+
[source,bash]
----
mysql -p
----
. Tapez le mot de passe mysql de root , puis dans mysql tapez:
+
[source,mysql]
----
CREATE SCHEMA munin_innodb;
USE munin_innodb
CREATE TABLE something (anything int) ENGINE=InnoDB;
GRANT SELECT ON munin_innodb.* TO 'munin'@'localhost' IDENTIFIED BY 'munin';
FLUSH PRIVILEGES;
EXIT;
----
. Editez ensuite le fichier de configuration de Munin. Tapez:
+
[source,bash]
----
vi /etc/munin/munin.conf
----
. Décommentez les lignes débutant par: `bdir`, `htmldir`, `logdir`, `rundir`, and `tmpldir`. Les valeurs par défaut sont correctes.
. Munin utilisera l'adresse `munin.example.com`. Toujours dans le fichier de configuration de munin, remplacer la directive `[localhost.localdomain]` par `[munin.example.com]`.
. Un fois les commentaires enlevés et la ligne modifiée, le fichier de configuration doit ressembler à celui-ci:
+
----
# Example configuration file for Munin, generated by 'make build'
# The next three variables specifies where the location of the RRD
# databases, the HTML output, logs and the lock/pid files. They all
# must be writable by the user running munin-cron. They are all
# defaulted to the values you see here.
#
dbdir /var/lib/munin
htmldir /var/cache/munin/www
logdir /var/log/munin
rundir /var/run/munin
# Where to look for the HTML templates
#
tmpldir /etc/munin/templates
# Where to look for the static www files
#
#staticdir /etc/munin/static
# temporary cgi files are here. note that it has to be writable by
# the cgi user (usually nobody or httpd).
#
# cgitmpdir /var/lib/munin/cgi-tmp

# (Exactly one) directory to include all files from.
includedir /etc/munin/munin-conf.d
[...]
# a simple host tree
[server1.example.com]
 address 127.0.0.1
 use_node_name yes
[...]
----
. Activez Munin dans Apache. Tapez:
+
[source,bash]
----
a2enconf munin
----
. Editez le fichier munin.conf d'Apache:
+
[source,bash]
----
vi /etc/apache2/conf-enabled/munin.conf
----
. Nous allons maintenant activer le module Munin dans Apache et définir une authentification basique. 
. Modifiez le fichier pour qu'il ressemble à celui ci-dessous:
+
[source,apache]
----
ScriptAlias /munin-cgi/munin-cgi-graph /usr/lib/munin/cgi/munin-cgi-graph
Alias /munin/static/ /var/cache/munin/www/static/

<Directory /var/cache/munin/www>
    Options FollowSymLinks SymLinksIfOwnerMatch
    AuthUserFile /etc/munin/munin-htpasswd
    AuthName "Munin"
    AuthType Basic
    Require valid-user

</Directory>

<Directory /usr/lib/munin/cgi>
    AuthUserFile /etc/munin/munin-htpasswd
    AuthName "Munin"
    AuthType Basic
    Require valid-user
    Options FollowSymLinks SymLinksIfOwnerMatch
    <IfModule mod_fcgid.c>
        SetHandler fcgid-script
    </IfModule>
    <IfModule !mod_fcgid.c>
        SetHandler cgi-script
    </IfModule>
</Directory>

# ***** SETTINGS FOR CGI/CRON STRATEGIES *****

# pick _one_ of the following lines depending on your "html_strategy"
# html_strategy: cron (default)
Alias /munin /var/cache/munin/www
# html_strategy: cgi (requires the apache module "cgid" or "fcgid")
#ScriptAlias /munin /usr/lib/munin/cgi/munin-cgi-html
----
. Créez ensuite le fichier de mot de passe de munin:
+
[source,bash]
----
htpasswd -c /etc/munin/munin-htpasswd admin
----
. Tapez votre mot de passe
. Redémarrez apache. Tapez:
+
[source,bash]
----
service apache2 restart
----
. Redémarrez Munin. Tapez:
+
[source,bash]
----
service munin-node restart
----
. Attendez quelques minutes afin que Munin produise ses premiers fichiers de sortie. et allez ensuite sur l'URL: http://example.com/munin/.

=== Activez les plugins de Munin

Dans Debian 10, tous les plugins complémentaires sont déjà activés.Vous pouvez être tenté de vérifier:

. Pour vérifier que la configuration est correcte. Tapez:
+
[source,bash]
----
munin-node-configure --suggest
----
. Une liste de plugins doit s'afficher à l'écran. La colonne `used` indique que le plugins est activé. La colonne `Suggestions` indique que le serveur fait fonctionner un service qui peut être monitoré par ce module. Il faut créer un lien symbolique du module de `/usr/share/munin/plugins` dans `/etc/munin/plugins` pour l'activer.
. Par exemple pour activer les modules apache_*:
+
[source,bash]
----
cd /etc/munin/plugins
ln -s /usr/share/munin/plugins/apache_accesses
ln -s /usr/share/munin/plugins/apache_processes
ln -s /usr/share/munin/plugins/apache_volume
rm /usr/share/munin/plugins/mysql_
----
. Redémarrez ensuite le service Munin. Tapez: 
+
[source,bash]
----
service munin-node restart
----

=== Installer et configurer Monit

Pour installer et configurer Monit, vous devez appliquer la procédure suivante:

. Tapez:
+
[source,bash]
----
apt install monit
----
. Maintenant nous devons éditer le fichier `monitrc` qui définira les services que l'on souhaite monitorer. Il existe de nombreux exemples sur le web et vous pourrez trouver de nombreuses configuration sur http://mmonit.com/monit/documentation/.
. Editez le fichier monitrc. Tapez:
+
[source,bash]
----
cp /etc/monit/monitrc /etc/monit/monitrc_orig
vi /etc/monit/monitrc
----
. Le fichier contient déjà de nombreux exemples. Nous configurer une surveillance de sshd, apache, mysql, proftpd, postfix, memcached, named, ntpd, mailman, amavisd, dovecot. Monit  sera activé sur le port 2812 et nous allons donner à l'utilisateur  admin un mot de passe. Le certificat HTTPS sera celui généré avec let's encrypt pour le site ISPConfig. Collez le contenu ci dessous dans le fichier monitrc:
+
----
set daemon 60
set logfile syslog facility log_daemon
set mailserver localhost
set mail-format { from: monit@fpvview.site }
set alert stef@fpvview.site
set httpd port 2812 and
 SSL ENABLE
 PEMFILE /usr/local/ispconfig/interface/ssl/ispserver.pem
 allow admin:"my_password" <1>

check process sshd with pidfile /var/run/sshd.pid
 start program "/usr/sbin/service ssh start"
 stop program "/usr/sbin/service ssh stop"
 if failed port 22 protocol ssh then restart
 if 5 restarts within 5 cycles then timeout

check process apache with pidfile /var/run/apache2/apache2.pid
 group www
 start program = "/usr/sbin/service apache2 start"
 stop program = "/usr/sbin/service apache2 stop"
 if failed host localhost port 80 protocol http
 and request "/monit/token" then restart
 if cpu is greater than 60% for 2 cycles then alert
 if cpu > 80% for 5 cycles then restart
 if totalmem > 500 MB for 5 cycles then restart
 if children > 250 then restart
 if loadavg(5min) greater than 10 for 8 cycles then stop
 if 3 restarts within 5 cycles then timeout
 
# ---------------------------------------------------------------------------------------------
# NOTE: Replace example.pid with the pid name of your server, the name depends on the hostname
# ---------------------------------------------------------------------------------------------
check process mysql with pidfile /var/run/mysqld/mysqld.pid
 group database
 start program = "/usr/sbin/service mysql start"
 stop program = "/usr/sbin/service mysql stop"
 if failed host 127.0.0.1 port 3306 then restart
 if 5 restarts within 5 cycles then timeout

check process proftpd with pidfile /var/run/pure-ftpd/pure-ftpd.pid
 start program = "/usr/sbin/service pure-ftpd-mysql start"
 stop program = "/usr/sbin/service pure-ftpd-mysql stop"
 if failed port 21 protocol ftp then restart
 if 5 restarts within 5 cycles then timeout

check process postfix with pidfile /var/spool/postfix/pid/master.pid
 group mail
 start program = "/usr/sbin/service postfix start"
 stop program = "/usr/sbin/service postfix stop"
 if failed port 25 protocol smtp then restart
 if 5 restarts within 5 cycles then timeout

check process memcached with pidfile /var/run/memcached/memcached.pid
 start program = "/usr/sbin/service memcached start"
 stop program = "/usr/sbin/service memcached stop"
 if failed host 127.0.0.1 port 11211 then restart

check process named with pidfile /var/run/named/named.pid
 start program = "/usr/sbin/service bind9 start"
 stop program = "/usr/sbin/service bind9 stop"
 if failed host 127.0.0.1 port 53 type tcp protocol dns then restart
 if failed host 127.0.0.1 port 53 type udp protocol dns then restart
 if 5 restarts within 5 cycles then timeout

check process ntpd with pidfile /var/run/ntpd.pid
 start program = "/usr/sbin/service ntp start"
 stop program = "/usr/sbin/service ntp stop"
 if failed host 127.0.0.1 port 123 type udp then restart
 if 5 restarts within 5 cycles then timeout

check process mailman with pidfile /var/run/mailman/mailman.pid
 group mail
 start program = "/usr/sbin/service mailman start"
 stop program = "/usr/sbin/service mailman stop"

check process amavisd with pidfile /var/run/amavis/amavisd.pid
 group mail
 start program = "/usr/sbin/service amavis start"
 stop program = "/usr/sbin/service amavis stop"
 if failed port 10024 protocol smtp then restart
 if 5 restarts within 5 cycles then timeout

check process dovecot with pidfile /var/run/dovecot/master.pid
 group mail
 start program = "/usr/sbin/service dovecot start"
 stop program = "/usr/sbin/service dovecot stop"
 if failed host localhost port 993 type tcpssl sslauto protocol imap then restart
 if 5 restarts within 5 cycles then timeout
----
<1> remplacez my_password par votre mot de passe

. La configuration est assez claire à lire. pour obtenir des précisions, référez vous à la documentation de monit http://mmonit.com/monit/documentation/monit.html.
. Dans la configuration pour apache, la configuration indique que monit doit allez chercher sur le port 80 un fichier dans `/monit/token`. Nous devons donc créer ce fichier. Tapez:
+
[source,bash]
----
mkdir /var/www/html/monit
echo "hello" > /var/www/html/monit/token
----
. Tapez :
+
[source,bash]
----
service monit restart
----
. Pour monitorer le statut des process en ligne de commande, tapez:
+
[source,bash]
----
monit status
----
. Débloquez le port 2812 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 2812
.. Cliquez sur `save`
. Maintenant naviguez sur le site https://example.com:2812/
. Rentrez le login `admin` et votre mot de passe `my_password`. Monit affiche alors les informations de monitoring du serveur.

== Configuration de la messagerie

=== Installation de rspamd à la place d' Amavis-new

`rspamd` est réputé de meilleure qualité que `Amavis` dans la chasse aux spams. Vous pouvez décider de l'installer à la place d'Amavis. Cette installation reste optionnelle.

Suivez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Installez les paquets debian. tapez:
+
[source,bash]
----
apt-get install rspamd redis-server
----
. Activez l'apprentissage automatique
+
[source,bash]
----
echo "autolearn = true;" > /etc/rspamd/local.d/classifier-bayes.conf
echo 'backend = "redis";' >> /etc/rspamd/local.d/classifier-bayes.conf
echo "new_schema = true;" >> /etc/rspamd/local.d/classifier-bayes.conf
echo "expire = 8640000;" >> /etc/rspamd/local.d/classifier-bayes.conf
----
. Activez Redis dans la configuration de Rspamd. Tapez:
+
[source,bash]
----
echo 'servers = "127.0.0.1";' > /etc/rspamd/local.d/redis.conf
----
. Fixer des métriques assez élevées pour analyser les spams
+
[source,bash]
----
echo "actions {" > /etc/rspamd/local.d/metrics.conf
echo 'add_header = 5;' >> /etc/rspamd/local.d/metrics.conf
echo "greylist = 25;" >> /etc/rspamd/local.d/metrics.conf
echo "reject = 50;" >> /etc/rspamd/local.d/metrics.conf
echo "}" >> /etc/rspamd/local.d/metrics.conf
----
. Augmentez la taille de l'historique de Rspamd, activez la compression.
+
[source,bash]
----
echo "nrows = 2500;" > /etc/rspamd/local.d/history_redis.conf 
echo "compress = true;" >> /etc/rspamd/local.d/history_redis.conf
echo "subject_privacy = false;" >> /etc/rspamd/local.d/history_redis.conf
----
. Activez la mise à jour automatique de rspamd
+
[source,bash]
----
echo 'enabled = true;' > /etc/rspamd/local.d/redis.conf
----
. Enrichissez les headers des mails spams. Tapez:
+
[source,bash]
----
vi /etc/rspamd/local.d/milter_headers.conf
----
. inserez le texte suivant:
+
[source]
----
# local.d/milter_headers.conf:

# Options

# Add "extended Rspamd headers" (default false) (enables x-spamd-result, x-rspamd-server & x-rspamd-queue-id routines)
extended_spam_headers = true;

# List of headers to be enabled for authenticated users (default empty)
# authenticated_headers = ["authentication-results"];

# List of headers to be enabled for local IPs (default empty)
local_headers = ["x-spamd-bar"];

# Set false to always add headers for local IPs (default true)
# skip_local = true;

# Set false to always add headers for authenticated users (default true)
# skip_authenticated = true;

# Routines to use- this is the only required setting (may be omitted if using extended_spam_headers)
use = ["x-spamd-bar", "x-spam-level", "authentication-results"];

# this is where we may configure our selected routines
routines {
  # settings for x-spamd-bar routine
  x-spamd-bar {
    # effectively disables negative spambar
    negative = "";
  }
  # other routines...
}
custom {
  # user-defined routines: more on these later
}
----
. Créez un mot de passe. Tapez:
+
[source,bash]
----
rspamadm pw
----
. Entrez votre mot de passe. Une hashphrase est générée.
. Copiez la.
. Remplacez celle déjà présente dans `/etc/rspamd/local.d/worker-controller.inc`
+
[source,bash]
----
vi /etc/rspamd/local.d/worker-controller.inc
----
. Remplacez le texte entre guillemets sur la ligne `password = "$2$g95yw......dq3c5byy";` par le texte copié.
. Sauvez
. Redémarrez Rspamd
+
[source,bash]
----
systemctl restart rspamd
----
. Loguez vous dans ISPConfig
. Activer Rspamd dans ISPConfig
.. Allez dans la rubrique `system` -> menu `Server Config` -> Sélectionnez votre serveur -> Onglet `Mail`
.. Dans le champ `Content Filter`, sélectionnez `Rspamd`
.. Dans le champ `Rspamd Password`, tapez votre mot de passe
.. Cliquez sur `Save`
.. Revenez dans la rubrique `system` -> menu `Server Config` -> Sélectionnez votre serveur -> Onglet `Mail`
.. Vous pouvez voir le mot de passe de connexion au serveur web Rspamd.
. Rendre le site rspamd accessible dans un host
. Activez le module proxy dans apache
+
[source,bash]
----
a2enmod proxy
systemctl restart apache2
----
. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `rspamd`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de `sites`.
.. Lui donner le nom `rspamd`.
.. Le faire pointer vers le web folder `rspamd`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# rspamd httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost:11334/
ProxyPassReverse / http://localhost:11334/
----
. en pointant sur le site rspampd.example.com, et en utilisant le mot de passe saisi plus haut vous pouvez accèder aux fonctions de l'outil.
. Activer l'apprentissage par déplacement
.. Couplé avec Dovecot, Rspamd nous propose de pouvoir apprendre également en fonction des actions des utilisateurs. Si un mail est déplacé vers le répertoire Junk, il sera appris comme tel et au contraire, s’il est sorti du répertoire Junk vers autre chose que la corbeille, il sera appris comme Ham.
.. Editez le fichier Dovecot.conf (remarques ISPConfig n'utilise pas aujourd'hui le contenu du répertoire conf.d). Tapez:
+
[source,bash]
----
vi /etc/dovecot/dovecot.conf
----
.. Insérez dans le groupe plugin et le protocol imap déjà existants dans le fichier :
+
[source]
----
plugin {
  sieve_plugins = sieve_imapsieve sieve_extprograms

  imapsieve_mailbox1_name = Junk
  imapsieve_mailbox1_causes = COPY
  imapsieve_mailbox1_before = file:/etc/dovecot/sieve/report-spam.sieve

  imapsieve_mailbox2_name = *
  imapsieve_mailbox2_from = Junk
  imapsieve_mailbox2_causes = COPY
  imapsieve_mailbox2_before = file:/etc/dovecot/sieve/report-ham.sieve

  sieve_pipe_bin_dir = /etc/dovecot/sieve

  sieve_global_extensions = +vnd.dovecot.pipe
}

protocol imap {
  mail_plugins = quota imap_quota imap_sieve
}
----
.. Redémarrez dovecot. Tapez:
+
[source,bash]
----
service dovecot restart
----
.. Créez un répertoire sieve et éditez report-ham.sieve. Tapez:
+
[source,bash]
----
mkdir -p /etc/dovecot/sieve/
vi /etc/dovecot/sieve/report-ham.sieve
----
.. Insérez le texte suivant:
+
[source]
----
require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "variables"];

if environment :matches "imap.mailbox" "*" {
set "mailbox" "${1}";
}

if string "${mailbox}" "Trash" {
stop;
}

if environment :matches "imap.email" "*" {
set "email" "${1}";
}

pipe :copy "train-ham.sh" [ "${email}" ];
----
.. Editez report-spam.sieve. Tapez:
+
[source,bash]
----
vi /etc/dovecot/sieve/report-spam.sieve
----
.. Insérez le texte suivant:
+
[source]
----
require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "variables"];

if environment :matches "imap.email" "*" {
set "email" "${1}";
}

pipe :copy "train-spam.sh" [ "${email}" ];
----
.. Créez les scripts et rétablissez les droits et permissions. Compilez les règles. Tapez:
+
[source,bash]
----
echo "exec /usr/bin/rspamc learn_ham" > /etc/dovecot/sieve/train-ham.sh
echo "exec /usr/bin/rspamc learn_spam" > /etc/dovecot/sieve/train-spam.sh
sievec /etc/dovecot/sieve/report-ham.sieve
sievec /etc/dovecot/sieve/report-spam.sieve
chmod +x /etc/dovecot/sieve/train-*
chown -R vmail:vmail /etc/dovecot/sieve
----
.. Redémarrez dovecot. Tapez:
+
[source,bash]
----
service dovecot restart
----
.. Lorsque vous déplacer un mail du répertoire Inbox vers le répertoire Junk ou vice-versa, les fichiers `/var/log/mail.log` et `/var/log/rspamd/rspamd.log` doivent montrer les actions de recalcul des spams.
. Enfin, vous pouvez désactiver amavisd si vous le souhaitez. tapez:
+
[source,bash]
----
systemctl stop amavisd-new
systemctl disable amavisd-new
----

=== Création du serveur de messagerie

Pour créer un serveur de messagerie:

. Assurez vous d'avoir créé le domaine DNS. Si ce n'est pas le cas déroulez tout d'abord la procédure de <<domain-config, création de domaines>>
. Aller dans la rubrique `Email`. Sélectionnez ensuite le menu `Domain`
. Cliquez sur `Add new Domain`
. Saisissez le nom de domaine.
. Cliquez sur `DomainKeys Indentified Mail (DKIM)`
. Cliquez sur `enable DKIM`
. Cliquez sur `Generate DKIM Private-key`
. Une fois cela fait, retourner dans la gestion des `Records` de domaine et activer le type DMARC
. Garder le paramétrage par défaut et sauvegardez.
. Faites de même pour les enregistrements SPF mais sélectionnez le mécanisme softfail.
. Votre serveur est créé et protégé Contre les spams (entrants et sortants).

=== Finaliser la sécurisation de votre serveur de mail

Afin de mieux sécuriser votre serveur de mail, appliquez les opérations suivantes:

. editez le fichier main.cf
+
[source,bash]
----
vi /etc/postfix/main.cf
----
. Rechercher `myhostname` et replacer le texte par:
+
[source,ini]
----
myhostname = mail.example.com <1>
----
<1> Remplacer example.com par votre nom de domaine.
. Redémarrez Postfix. Tapez:
+
[source,bash]
----
service postfix restart
----
. Vous pouvez le tester en allant sur le site https://mxtoolbox.com/diagnostic.aspx[MxToolbox].
** Entrez le nom de host de votre serveur de mail: mail.example.com .
** cliquez sur `test Email Server`
** Tout doit être correct sauf éventuellement le reverse DNS qui doit être configuré pour pointer vers mail.example.com .

=== Création de l’autoconfig pour Thunderbird et Android

La procédure est utilisé par Thunderbird et Android pour configurer automatiquement les paramètres de la messagerie.

Appliquez la procédure suivante:

. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `autoconfig`.
.. Le faire pointer vers le web folder `autoconfig`.
.. Activer let’s encrypt ssl
.. Activer `php-FPM`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----

AddType application/x-httpd-php .php .php3 .php4 .php5 .xml

CheckSpelling On
CheckCaseOnly Off
----
.. Sauver.
. <<#root_login, Loguez vous comme root sur le serveur>>
. Dans le répertoire `/var/www/autoconfig.example.com/autoconfig/` créer un répertoire mail. Lui donner les permissions 755 et affecter les mêmes possesseurs que pour autres fichiers du répertoire. Tapez:
+
[source,bash]
----
mkdir -p /var/www/autoconfig.example.com/autoconfig/mail
chmod 755 /var/www/autoconfig.example.com/autoconfig/mail
chown web1:client0 /var/www/autoconfig.example.com/autoconfig/mail <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`
.. A l’intérieur de ce répertoire, Editez un fichier `config-v1.1.xml`. Tapez:
+
[source,bash]
----
vi /var/www/autoconfig.example.com/autoconfig/mail/config-v1.1.xml
----
. Y coller:
+
[source,xml]
----
<?php
header('Content-Type: application/xml');
?>
<?xml version="1.0" encoding="UTF-8"?>

<clientConfig version="1.1">
 <emailProvider id="example.com"> <1>
   <domain>example.com</domain> 
   <displayName>Example Mail</displayName> <2>
   <displayShortName>Example</displayShortName> <3>
   <incomingServer type="imap">
     <hostname>mail.example.com</hostname> <1>
     <port>993</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </incomingServer>
   <incomingServer type="pop3">
     <hostname>mail.example.com</hostname> <1>
     <port>995</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </incomingServer>
   <outgoingServer type="smtp">
     <hostname>mail.example.com</hostname> <1>
     <port>465</port>
     <socketType>SSL</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </outgoingServer>
   <outgoingServer type="smtp">
     <hostname>mail.example.com</hostname> <1>
     <port>587</port>
     <socketType>STARTTLS</socketType>
     <authentication>password-cleartext</authentication>
     <username>%EMAILADDRESS%</username>
   </outgoingServer>
 </emailProvider>
</clientConfig>

----
<1> mettre à la place de example.com votre nom de domaine
<2> mettre ici votre libellé long pour votre nom de messagerie
<3> mettre ici un libellé court pour votre nom de messagerie
. Donner la permission en lecture seule et affecter les groupes d'appartenance. Tapez:
+
[source,bash]
----
chmod 644 /var/www/autoconfig.example.com/autoconfig/mail/config-v1.1.xml
chown web1:client0 /var/www/autoconfig.example.com/autoconfig/mail/config-v1.1.xml <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`

=== Création d’autodiscover pour Outlook

Outlook utilise un autre mécanisme pour se configurer automatiquement. Il est basé sur l'utilisation du nom de sous-domaine `autodiscover`.

Appliquez la procédure suivante:

. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `autodiscover`.
.. Le faire pointer vers le web folder `autodiscover`.
.. Activer let’s encrypt ssl
.. Activer `php-FPM`
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
CheckSpelling On
CheckCaseOnly On
RewriteEngine On
ProxyPass "/" http://autoconfig.example.com/ <1>
ProxyPassReverse "/" http://autoconfig.example.com/ <1>
RewriteRule ^/ - [QSA,L]
----
<1> remplacer example.com par votre nom de domaine
.. Sauver.
. <<#root_login, Loguez vous comme root sur le serveur>>
. Dans le répertoire `/var/www/autoconfig.example.com/autoconfig/`, créer un répertoire `Autodiscover`. Lui donner les permissions 755 et affecter les mêmes possesseurs que pour autres fichiers du répertoire. Tapez:
+
[source,bash]
----
mkdir -p /var/www/autoconfig.example.com/autoconfig/Autodiscover/
chmod 755 /var/www/autoconfig.example.com/autoconfig/Autodiscover/
chown web1:client0 /var/www/autoconfig.example.com/autoconfig/Autodiscover/ <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`
.. A l’intérieur de ce répertoire, Editez un fichier `Autodiscover.xml`. Tapez:
+
[source,bash]
----
vi /var/www/autoconfig.example.com/autoconfig/Autodiscover/Autodiscover.xml
----
. Y coller:
+
[source,xml]
----
<?php  
 $raw = file_get_contents('php://input'); 
 $matches = array(); 
 preg_match('/<EMailAddress>(.*)<\/EMailAddress>/', $raw, $matches); 
 header('Content-Type: application/xml');  
?> 
 <Autodiscover xmlns="http://schemas.microsoft.com/exchange/autodiscover/responseschema/2006"> 
   <Response xmlns="http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a"> 
     <User>
       <DisplayName>Example Mail</DisplayName> <2>
     </User>
     <Account>
       <AccountType>email</AccountType>
       <Action>settings</Action>
       <Protocol>
         <Type>IMAP</Type>
         <Server>mail.example.com</Server> <1>
         <Port>993</Port>
         <DomainRequired>off</DomainRequired>
         <SPA>off</SPA>
         <SSL>on</SSL>
         <AuthRequired>on</AuthRequired>
         <LoginName><?php echo $matches[1]; ?></LoginName>
       </Protocol>
       <Protocol>
         <Type>SMTP</Type>
         <Server>mail.example.com</Server> <1>
         <Port>465</Port>
         <DomainRequired>off</DomainRequired>
         <SPA>off</SPA>
         <SSL>on</SSL>
         <AuthRequired>on</AuthRequired>
         <LoginName><?php echo $matches[1]; ?></LoginName>
       </Protocol>
     </Account>
   </Response>
 </Autodiscover>
----
<1> mettre à la place de example.com votre nom de domaine
<2> mettre ici votre libellé long pour votre nom de messagerie
. Changez les permissions comme pour le répertoire
+
[source,bash]
----
chmod 644 /var/www/autoconfig.example.com/autoconfig/Autodiscover/Autodiscover.xml
chown web1:client0 /var/www/autoconfig.example.com/autoconfig/Autodiscover/Autodiscover.xml <1>
----
<1> remplacer web1:client0 par les permissions du répertoire `/var/www/autoconfig.example.com`
. Pointer votre navigateur sur le site https://autodiscover.example.com/Autodiscover/Autodiscover.xml.
. Le contenu du fichier xml doit s'afficher
. Vous pouvez faire aussi un test sur le https://testconnectivity.microsoft.com[Testeur de connectivité Microsoft].
.. choisissez: `Découverte automatique Outlook`
.. cliquez sur `suivant`
.. Entrez votre adresse de courrier: `user@example.com`, un domain: `example\user`, un mot de passe tiré au hazard, Cochez les deux cases en dessous.
.. Cliquez sur `effectuer un test`
.. Le résultat doit être: `Test de connectivité réussi`

=== Création d’une boite mail

Pour créer une boite de messagerie:

. Aller dans la rubrique `Email`. Sélectionnez ensuite le menu `Email Mailbox`
. Cliquez sur `Add new Mailbox`
. Remplissez les champs suivants:
.. `Name:` <- mettez votre prénom et votre nom
.. ``Email:` <- mail_name @ example.com
.. `Password:` <- saisissez un mot de passe ou générez en un
.. `Repeat Password` <- saisissez une deuxième fois votre mot de passe
.. `Quota (0 for unlimited):` <- mettez éventuellement un quota ou laissez 0 pour illimité.
.. `Spamfilter:` <- Sélectionnez `Normal`
. Dans l’onglet Backup:
.. `Backup interval:` Sélectionnez `Daily`
.. `Number of backup copies:` Sélectionnez 1
. Cliquez sur `Save`

[NOTE]
Notez que si vous créez une adresse mail nommée mail_name@example.com, vous pouvez utilisez toutes les variantes (nommées tag) derrière le caractère "+". Ainsi mail_name+nospam@example.com sera bien redirigé vers votre boite et l'extension +nospam vous permettre de trier automatiquement les mails que vous ne voulez pas recevoir.

[NOTE]
Il est possible de changer ce caractère spécial en le modifiant dans le fichier `/etc/postfix/main.cf` sur la ligne commençant par `recipient_delimiter`.

=== Configuration de votre client de messagerie.

Saisir l'adresse mail et votre mot de passe doit suffire pour configurer automatiquement votre client de messagerie.

Si vous avez besoin de configurer votre client manuellement, voici les informations à saisir:

[options="header"]
|===
| Paramètre | Valeur
| Type de serveur | IMAP
| Nom de serveur IMAP | mail.example.com
| Nom d'utilisateur IMAP | user@example.com
| Port IMAP | 993
| Sécurité IMAP | SSL/TLS
| Authentification IMAP | Normal Password
| Nom de serveur SMTP | mail.example.com
| Nom d'utilisateur SMTP | user@example.com
| Port SMTP | 465
| Sécurité SMTP | SSL/TLS
| Authentification SMTP | Normal Password
|===

=== Mise en oeuvre du site web de webmail

On suppose que vous avez install roundcube lors de la procédure d'installation initiale et que vous avez déjà créé le host mail.example.com.

Il vous reste à appliquer la procédure suivante:

. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `mail`.
.. Le faire pointer vers le web folder `mail`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# roundcube httpserver

SSLProxyEngine On
SSLProxyCheckPeerCN Off
SSLProxyCheckPeerName Off
SSLProxyVerify none

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / https://localhost:8080/webmail/
ProxyPassReverse / https://localhost:8080/webmail/
ProxyPreserveHost On

----
. C'est fait, vous pouvez accéder à Roundcube directement sur https://mail.example.com

=== Transfert de vos boites mails IMAP

Si vous faites une migration d'un ancien serveur vers un nouveau serveur vous souhaiterez probablement migrer aussi vos boites mail.

La procédure ci dessous est à appliquer pour chaque compte mail IMAP. Elle peut facilement être scriptée:

. Téléchargez imapsync du repository. Tapez:
+
----
wget https://raw.githubusercontent.com/imapsync/imapsync/master/imapsync
chmod 755 imapsync
----
. Installez les packages perls éventuellement manquants:
+
----
apt install libregexp-common-perl libfile-tail-perl libsys-meminfo-perl libunicode-string-perl libmail-imapclient-perl libio-tee-perl libio-socket-inet6-perl libfile-copy-recursive-perl
----
. Créez deux fichiers temporaires qui contiennent les mots de passe du 1er et  2eme serveur. Tapez:
+
----
echo "passwdsrc" > secretsrc <1>
echo "passwddst" > secretdst <2>
chmod 600 secretsrc
chmod 600 secretdst
----
<1> passwdsrc est à remplacer par le mot de passe du compte sur le serveur source
<2> passwddst est à remplacer par le mot de passe du compte sur le serveur destination
. Nous pouvons maintenant lancer la commande. Tapez:
+
----
./imapsync --host1 imap.examplesrc.com --user1 usersrc@examplesrc.com --passfile1 /etc/secretsrc --host2 imap.exampledst.com --user2 userdst@exampledst.com --passfile2 /etc/secretdst
----
. Un fois la synchronisation effectuée, vous pouvez supprimer le fichier des mots de passe. tapez:
+
----
rm secretsrc
rm secretdst
----

== Installation de Joomla ou de Concrete5

Joomla est un CMS très connu écrit en PHP. Il est fréquemment mis à jour et inclut une foule de plugins
Concrete5 est un autre CMS assez connu  avec un design plus moderne.

L'installation s'effectue à 100% avec ISPConfig.
Dans la procédure ci dessous qui est taillée pour Joomla, vous pouvez l'appliquer à l'identique pour concrete5 en remplacant les textes joomla par concrete5.

=== Création du site web de Joomla

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `joomla`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `joomla`.
.. Le faire pointer vers le web folder `joomla`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.

=== Création de l'application Joomla

Appliquez les opérations suivantes dans ISPConfig:

. Allez dans la rubrique `Sites`, le menu `Update Packagelist`.
. Cliquez sur `Update Packagelist`
. Allez dans la rubrique `Sites`, le menu `Available packages`.
. Faites une recherche par `Name`. Tapez `joomla`
. Cliquez sur le package `joomla`
. Cliquez sur `Install this package`
. Remplissez tous les champs:
** `Install location:` <- choisissez votre domain (`example.com`) et laissez vide le chemin.
** `New database password` <- gardez ce qui est remplit
** `Administrator's login` <- gardez ce qui est remplit: `admin`
** `Password` et `Repeat Password` <- Tapez votre mot de passe
** `Default site language:` <- choisissez `French`
** `I accept the license` <- cochez la case
. Cliquez sur `Install`
. Pointez votre navigateur sur https://example.com/ et loguez vous `admin` avec votre mot de passe saisi, c'est fait !
. N'oubliez pas d'administrer le site et de le mettre à jour avec la dernière version de Joomla.

== Installation de Mediawiki

Mediawiki est le portail wiki mondialement connu et utilisé notamment pour le site wikipedia.

L'installation s'effectue à 100% avec ISPConfig.

=== Création du site web de Mediawiki

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `mediawiki`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `mediawiki`.
.. Le faire pointer vers le web folder `mediawiki`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.

=== Création de l'application Mediawiki

Appliquez les opérations suivantes dans ISPConfig:

. Allez dans la rubrique `Sites`, le menu `Update Packagelist`.
. Cliquez sur `Update Packagelist`
. Allez dans la rubrique `Sites`, le menu `Available packages`.
. Faites une recherche par `Name`. Tapez `mediawiki`
. Cliquez sur le package `mediawiki`
. Cliquez sur `Install this package`
. Remplissez tous les champs:
** `Install location:` <- choisissez votre domain (`example.com`) et laissez vide le chemin.
** `New database password` <- gardez ce qui est remplit
** `Administrator's login` <- gardez ce qui est remplit: `admin`
** `Password` et `Repeat Password` <- Tapez votre mot de passe
** `Default site language:` <- choisissez `French`
** `I accept the license` <- cochez la case
. Cliquez sur `Install`
. Pointez votre navigateur sur https://example.com/ et loguez vous `admin` avec votre mot de passe saisi, c'est fait !
. N'oubliez pas d'administrer le site et de le mettre à jour avec la dernière version de Mediawiki.

== Installation de Wordpress

Wordpress est un CMS très connu écrit en PHP. Il est fréquemment mis à jour.

L'installation s'effectue à 100% avec ISPConfig.

=== Création du site web de Wordpress

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `wordpress`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `wordpress`.
.. Le faire pointer vers le web folder `wordpress`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.

=== Création de l'application Wordpress

Appliquez les opérations suivantes dans ISPConfig:

. Allez dans la rubrique `Sites`, le menu `Update Packagelist`.
. Cliquez sur `Update Packagelist`
. Allez dans la rubrique `Sites`, le menu `Available packages`.
. Faites une recherche par `Name`. Tapez `wordpress`
. Cliquez sur le package `wordpress`
. Cliquez sur `Install this package`
. Remplissez tous les champs:
** `Install location:` <- choisissez votre domain (`example.com`) et laissez vide le chemin.
** `New database password` <- gardez ce qui est remplit
** `Administrator's login` <- gardez ce qui est remplit: `admin`
** `Password` et `Repeat Password` <- Tapez votre mot de passe
** `Default site language:` <- choisissez `French`
** `I accept the license` <- cochez la case
. Cliquez sur `Install`
. Pointez votre navigateur sur https://example.com/ et loguez vous `admin` avec votre mot de passe saisi, c'est fait !
. N'oubliez pas d'administrer le site et de le mettre à jour avec la dernière version de Wordpress.

== Micro Weber

Microweber est un système de gestion de contenu et un constructeur de sites web Open Source. Il est basé sur le langage de programmation PHP et le framework web Laravel 5, utilisant le glisser-déposer et permettant aux utilisateurs de créer rapidement du contenu, tout en programmant et en gérant plusieurs affichages. Il dispose d'une fonction d'édition en direct qui permet aux utilisateurs de visualiser leurs modifications telles qu'elles apparaîtraient. 

=== Création du site web de Microweber

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `microweber`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `microweber`.
.. Le faire pointer vers le web folder `microweber`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.
.. Cliquez sur `Save`
. <<#root_login, Loguez vous comme root sur le serveur>>

=== Création des bases de données

Appliquez les opérations suivantes dans ISPConfig :

. Créez une base de données mysql. Aller dans le menu `Database` pour définir un utilisateur MariaDB
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `microweber` par exemple
**** `Database password:` <- saisir un mot de passe ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Cliquez sur `save`
.. Cliquez sur `Add new Database` pour créer une nouvelle base de données
.. Saisissez les informations:
*** `Site:` <- sélectionner le site `example.com`
*** `Database name:` <- Saisissez le nom de la base de données `microweber`
*** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxmicroweber`. x: est le numéro de client.
.. Cliquez sur `save`

=== Installation de Microweber

Suivez la procédure suivante:

. Tapez la commande suivante:
[source,command]
----
https://raw.githubusercontent.com/microweber-dev/webinstall/master/webinstall.php
----
. Un fois téléchargé, faites pointer votre navigateur vers http://microweber.example.com/netinstall.php
. Indique `.` comme répertoire d'installation et cliquez sur `Télécharger et décompresser Piwigo`
. Une fois le téléchargement terminé cliquez sur `Installer Microweber`. Rechargez la page si besoin.
. Répondez aux questions suivantes:
** `Hote` <- Laissez `localhost`
** `Utilisateur` <- entrez `cxmicroweber`. x est le numero de client; habituellement c'est 0
** `Mot de passe` <- Tapez votre mot de passe
** `Nom de la Base de données` <- entrez `cxmicroweber`. x est le numero de client; habituellement c'est 0
** `Préfix des noms de tables` <- Laissez le champ vide
** `Nom d'Utilisateur` <- tapez `admin`
** `Mot de passe` <- Tapez votre mot de passe
** `Mot de passe [confirmer]` <- Tapez votre mot de passe
** `Adresse e-mail` <- Tapez votre adresse mail d'administrateur
. Tapez `Démarrer l'installation`
. Vous êtes redirigé sur le site Microweber ou vous pourrez vous loguer et commencer à utiliser l'outil

== Piwigo

Piwigo est une application web pour gérer votre collection de photos, et autres médias. Doté de puissantes fonctionnalités, il gère des galeries partout dans le monde. Elle est écrite en PHP et nécessite une base de données MySQL.

Piwigo était auparavant connu sous le nom PhpWebGallery.

=== Création du site web de Piwigo

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `piwigo`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `piwigo`.
.. Le faire pointer vers le web folder `piwigo`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.
.. Cliquez sur `Save`
. <<#root_login, Loguez vous comme root sur le serveur>>

=== Création des bases de données

Appliquez les opérations suivantes dans ISPConfig :

. Créez une base de données mysql. Aller dans le menu `Database` pour définir un utilisateur MariaDB
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `piwigo` par exemple
**** `Database password:` <- saisir un mot de passe ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Cliquez sur `save`
.. Cliquez sur `Add new Database` pour créer une nouvelle base de données
.. Saisissez les informations:
*** `Site:` <- sélectionner le site `example.com`
*** `Database name:` <- Saisissez le nom de la base de données `piwigo`
*** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxpiwigo`. x: est le numéro de client.
.. Cliquez sur `save`

=== Installation de Piwigo

Suivez la procédure suivante:

. Tapez la commande suivante:
[source,command]
----
cd /var/www/piwigo.example.com/piwigo
wget http://piwigo.org/download/dlcounter.php?code=netinstall -O piwigo-netinstall.php
----
. Un fois téléchargé, faites pointer votre navigateur vers http://piwigo.example.com/piwigo-netinstall.php
. Indique `.` comme répertoire d'installation et cliquez sur `Téléharger et décompresser Piwigo`
. Une fois le téléchargement terminé cliquez sur `Installer Piwigo`. Rechargez la page si besoin.
. Répondez aux questions suivantes:
** `Hote` <- Laissez `localhost`
** `Utilisateur` <- entrez `cxpiwigo`. x est le numero de client; habituellement c'est 0
** `Mot de passe` <- Tapez votre mot de passe
** `Nom de la Base de données` <- entrez `cxpiwigo`. x est le numero de client; habituellement c'est 0
** `Préfix des noms de tables` <- Laissez le champ vide
** `Nom d'Utilisateur` <- tapez `admin`
** `Mot de passe` <- Tapez votre mot de passe
** `Mot de passe [confirmer]` <- Tapez votre mot de passe
** `Adresse e-mail` <- Tapez votre adresse mail d'administrateur
. Tapez `Démarrer l'installation`
. Vous êtes redirigé sur le site piwigo ou vous pourrez vous loguer et commencer à utiliser l'outil

== Installation de Nextcloud

NextCloud est un serveur d'hébergement et de partage de fichiers gratuit et open source, fork du projet ownCloud.
Il est très similaire aux autres systèmes de partage de fichiers des services comme Google Drive, Dropbox et iCloud ou Seafile.
NextCloud vous permet de stocker des fichiers, des documents, des photos, des films et des vidéos à partir de la centrale l'emplacement.
Avec NextCloud, vous pouvez partager des fichiers, des contacts et tout autre les médias avec vos amis et vos clients.
NextCloud s'intègre avec le courrier, calendrier, contacts et autres fonctionnalités qui aideront vos équipes à obtenir leur travail est plus rapide et plus facile.
Vous pouvez installer le client NextCloud sur un  ou plusieurs PC pour synchroniser les fichiers avec votre serveur Nextcloud.
Des clients sont disponibles pour la plupart des systèmes d'exploitation, y compris Windows, macOS, FreeBSD, et Linux.

=== Installation initiale

NextCloud est écrit en PHP et utilise une base de données MariaDB pour stocker ses données.

Pour installer, Suivez la procédure suivante:

. Installez quelques paquets de base. Tapez:
+
[source,bash]
----
apt-get install  php-cgi php-curl
----
. Une fois installé, éditez le fichier php.ini pour changer quelques limitations. Tapez:
[source,bash]
----
vi /etc/php/7.3/apache2/php.ini
----
. Cherchez les champs ci dessous et changez les valeurs comme suit:
+
[source,ini]
----
memory_limit = 512M
upload_max_filesize = 500M
post_max_size = 500M
max_execution_time = 300
date.timezone = Asia/Kolkata
----
. Sauvez et redémarrez apache. Tapez:
+
[source,command]
----
systemctl restart apache2
----

=== Création du site web de Nextcloud

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `nextcloud`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `nextcloud`.
.. Le faire pointer vers le web folder `nextcloud`.
.. Activer let’s encrypt ssl
.. Activer `PHP-FPM` pour PHP
.. Laisser le reste par défaut.
.. Cliquez sur `Save`
. <<#root_login, Loguez vous comme root sur le serveur>>

=== Création des bases de données

Appliquez les opérations suivantes dans ISPConfig :

. Créez une base de données mysql. Aller dans le menu `Database` pour définir un utilisateur MariaDB
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `nextcloud` par exemple
**** `Database password:` <- saisir un mot de passe ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Cliquez sur `save`
.. Cliquez sur `Add new Database` pour créer une nouvelle base de données
.. Saisissez les informations:
*** `Site:` <- sélectionner le site `example.com`
*** `Database name:` <- Saisissez le nom de la base de données `nextcloud`
*** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxnextcloud`. x: est le numéro de client.
.. Cliquez sur `save`

=== Installation de Nextcloud

Suivez la procédure suivante:

. Tapez la commande suivante:
[source,command]
----
cd /var/www/nextcloud.example.com/nextcloud
wget https://download.nextcloud.com/server/installer/setup-nextcloud.php
----
. Un fois téléchargé, faites pointer votre navigateur vers http://nextcloud.example.com/setup-nextcloud.php
. Indique `.` comme répertoire d'installation et cliquez sur `Next`
. Une fois le téléchargement terminé cliquez sur `Next`. Rechargez la page si besoin.
. Répondez aux questions suivantes:
** `Login Admin` <- tapez `admin`
** `Password Admin` <- Tapez votre mot de passe
** ouvrez `Stockage et base de données`
** `Configurer la base de données` <- cliquez sur `MariaDB`
** `Utilisateur de la Base de données` <- entrez `cxnextcloud`. x est le numero de client; habituellement c'est 0
** `Password de la Base de données` <- Tapez votre mot de passe
** `Nom de la Base de données` <- entrez `cxnextcloud`. x est le numero de client; habituellement c'est 0
** `nom du serveur` <- Laissez `Localhost`
. Tapez `Next`
. Vous êtes redirigé sur le site nextcloud ou vous pourrez vous loguer et commencer à utliser l'outil

== Installation et configuration de Gitea

Gitea est un système simple d'hébergement de code basé sur Git. C'est un fork de Gogs.
Il montre des fonctionnalités similaires à gitlab ou github tout en gardant un code plus simple.

=== Création du site web de Gitea

Appliquez les opérations suivantes Dans ISPConfig:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `gitea`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `gitea`.
.. Le faire pointer vers le web folder `gitea`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# gitea httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost:3000/ <1>
ProxyPassReverse / http://localhost:3000/ <1>
----
<1> mettez le nom de votre domaine à la place de example.com
.. Cliquez sur `Save`
. <<#root_login, Loguez vous comme root sur le serveur>>
. Créez un utilisateur `Gitea`. Tapez:
+
[source,bash]
----
adduser --system --disabled-password --group --shell /bin/bash --home /home/gitea gitea
----
. Créez la structure de répertoire de `Gitea`. Tapez:
+
[source,bash]
----
mkdir -p /var/lib/gitea/{data,log} /etc/gitea /run/gitea
----
. Donnez les bonnes permissions aux répertoires. Tapez:
+
[source,bash]
----
chown -R gitea:gitea /var/lib/gitea
chown -R gitea:gitea /run/gitea
chown -R root:gitea /etc/gitea
chmod -R 750 /var/lib/gitea
chmod 770 /etc/gitea
----

=== Création des bases de données

Appliquez les opérations suivantes dans ISPConfig :

. Créez une base de données mysql. Aller dans le menu `Database` pour définir un utilisateur MariaDB
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `gitea` par exemple
**** `Database password:` <- saisir un mot de passe ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Cliquez sur `save`
.. Cliquez sur `Add new Database` pour créer une nouvelle base de données
.. Saisissez les informations:
*** `Site:` <- sélectionner le site `example.com`
*** `Database name:` <- Saisissez le nom de la base de données `gitea`
*** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxgitea`. x: est le numéro de client.
.. Cliquez sur `save`

=== Téléchargez et installez Gitea

Appliquez les opérations suivantes:

. Téléchargez gitea du https://dl.gitea.io/gitea/[site de chargement]. Tapez pour un système 64 bits:
+
[source,bash]
----
wget https://dl.gitea.io/gitea/master/gitea-master-linux-amd64 -O /usr/local/bin/gitea
chmod 755 /usr/local/bin/gitea
----
. Créez maintenant une entrée pour le launcher systemd. Tapez:
+
[source,bash]
----
vi /etc/systemd/system/gitea.service
----
. y Coller le texte suivant:
+
[source,ini]
----
[Unit]
Description=Gitea (Git with a cup of tea)
After=syslog.target
After=network.target
Requires=mysqld.service
[Service]
Type=simple
User=gitea
Group=gitea
WorkingDirectory=/var/lib/gitea/
RuntimeDirectory=gitea
ExecStart=/usr/local/bin/gitea web -c /etc/gitea/app.ini
Restart=always
Environment=USER=gitea HOME=/home/gitea GITEA_WORK_DIR=/var/lib/gitea
[Install]
WantedBy=multi-user.target
----
. Recharge la base de systemd. Tapez:
+
[source,bash]
----
systemctl daemon-reload
----
. Activez et démarrez `Gitea`. Tapez:
+
[source,bash]
----
systemctl enable gitea.service
systemctl start gitea.service
----
. Ouvrez votre navigateur sur l'url: https://gitea.example.com/install et remplissez les paramètres comme ci-après :
** `Type de base de données:` <- Sélectionnez `MySQL`
** `Nom d'utilisateur:` <- Tapez `c0gitea`
** `Mot de passe:` <-  Tapez le mot de passe saisi lors de la création de la base
** `Nom de base de données:` <- Tapez `c0gitea`
** `Titre du site:` <- mettez une titre de votre choix
** `Emplacement racine des dépôts:` <- saisissez `/home/gitea/gitea-repositories`
** `Répertoire racine Git LFS:` <- Tapez `/var/lib/gitea/data/lfs`
** `Exécuter avec le compte d'un autre utilisateur :` <- Tapez `gitea`
** `Domaine du serveur SSH:` <- Tapez votre domaine. exemple : `gitea.example.com`
** `Port du serveur SSH:` <- Tapez 22
** `Port d'écoute HTTP de Gitea:` <- Tapez 3000
** `URL de base de Gitea:` <- Tapez l'URL de votre domaine. Exemple: `https://gitea.example.com`
** `Chemin des fichiers log:` <- Tapez  `/var/lib/gitea/log`
** `Hôte SMTP:` <- Tapez `localhost`
** `Envoyer les e-mails en tant que:` <- Tapez `gitea@gitea.example.com`
** `Exiger la confirmation de l'e-mail lors de l'inscription:` <- cochez la case
** `Activez les notifications par e-mail:` <- cochez la case
** `Désactiver le formulaire d'inscription:` <- cochez la case
** `Masquer les adresses e-mail par défaut:` <- cochez la case
. Laissez le reste et cliquez sur `Install Gitea`.
. Restreignez les permissions sur le fichier de configuration de gitea. Tapez:
+
[source,bash]
----
chmod 750 /etc/gitea
chown root:gitea /etc/gitea/app.ini
chmod 640 /etc/gitea/app.ini
----

. Redémarrez `gitea`.
. <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
systemctl restart gitea.service
----

=== Activer une connexion SSH dédiée

En option, vous pouvez avoir envie de dédier une connexion SSH pour Gitea:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Éditez le fichier de configuration. Tapez:
+
[source,bash]
----
vi /etc/gitea/app.ini
----
. Trouvez les lignes suivantes et les remplacer dans le fichier. Chercher et remplacez:
+
[source,bash]
----
START_SSH_SERVER = true
SSH_PORT = 2222 <1>
----
<1> mettez ici le numéro de port que vous souhaitez
. Débloquez le port 2222 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 222
.. Cliquez sur `save`
. Redémarrez `gitea`. Tapez:
+
[source,bash]
----
systemctl restart gitea.service
----
. Enjoy !

== Installation de Seafile

Seafile est un système de partage de fichier simple et efficace écrit en Python. Il existe des clients de connexion pour Windows, Linux, Android, IOS.

Cette installation est optionnelle.

=== Création du site web de Seafile

Appliquez la procédure suivante:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `seafile`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `seafile`.
.. Le faire pointer vers le web folder `seafile`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
Alias /media {DOCROOT}/private/seafile/seafile-server-latest/seahub/media
RewriteEngine On

<Location /media>
Require all granted
</Location>

Alias /.well-known {DOCROOT}/private/seafile/.well-known
RewriteEngine On

<Location /.well-known>
Require all granted
</Location>

ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# seafile httpserver
#
ProxyPass /seafhttp http://localhost:8092
ProxyPassReverse /seafhttp http://localhost:8092
RewriteRule ^/seafhttp - [QSA,L]
#
# seahub
#
SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost:8090/
ProxyPassReverse / http://localhost:8090/
----

=== Création de bases de données

. Loguez vous sur ISPConfig
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `seafile` par exemple
**** `Database password:` <- saisir un mot de passe ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- saisir de nouveau le mot de passe
.. Aller dans le menu `Database` pour définir les bases de données
.. Appliquer l'opération ci après 3 fois d'affilée pour créer les trois bases suivantes: `ccnetdb`, `seafiledb`, `seahubdb`
... Cliquez sur `Add new Database` pour créer une nouvelle base de données
... Saisissez les informations:
**** `Site:` <- sélectionner le site `example.com`
**** `Database name:` <- Saisissez le nom de la base de données 
**** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxseafile`. x: est le numéro de client.
... Cliquez sur `save`
.. Les trois bases de données doivent apparaître dans la liste des bases

=== Téléchargez et installez Seafile

Appliquez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Installez quelques paquets Debian complémentaires. Tapez:
+
[source,bash]
----
apt-get install python2.7 python-setuptools python-simplejson python-pil python-mysqldb python-flup
----
. Je préfère faire tourner mes serveurs dans le répertoire privé plutôt que dans le répertoire web pour des questions de sécurité. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private
mkdir seafile
cd seafile
wget https://download.seadrive.org/seafile-server_7.0.5_x86-64.tar.gz
tar zxvf seafile-server_7.0.5_x86-64.tar.gz
mkdir installed
mv seafile-server_* installed
cd seafile-server-*
./setup-seafile-mysql.sh
cd ../..
chown -R web1:client0 seafile <1>
----
<1> choisissez le user et le groupe de votre site web. Ces informations sont consultables dans ISPConfig en consultant les informations du Web Domain->onglet `Options`->champs Linux User et Linux Group.
. A ce moment, vous devez répondre à un certain nombre de questions.
. Choisissez le mode de configuration 2) pour indiquer vous même les informations sur les bases de données créées.
. Vous devrez ensuite donner le nom d'utilisateur pour la base de données, le mot de passe ainsi que le nom des 3 bases de données.
. Si tout est saisi correctement le programme doit donner une synthèse de ce qui a été configuré

=== Lancement initial

Nous allons effectuer un premier lancement du serveur Seafile:

. allez dans le répertoire contenant les configurations et éditez `gunicorn.conf`. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private/seafile/conf
vi gunicorn.conf
----
. Repèrez le texte `bind=` et mettez un numéro de port 8090 à la place de 8000. Comme ceci:
+
[source,bash]
----
bind = "127.0.0.1:8090"
----
. Editez le fichier `seafile.conf`. Tapez:
+
[source,bash]
----
vi seafile.conf
----
. mettez un port 8092 au lieu du port 8080 saisi pour l'entrée `fileserver`. Le fichier doit contenir ceci:
+
[source,ini]
----
[fileserver]
port = 8092
----
. Editez le fichier `ccnet.conf`. Tapez:
+
[source,bash]
----
vi ccnet.conf
----
. modifier l'entrée SERVICE_URL. Le fichier doit contenir ceci:
+
[source,bash]
----
SERVICE_URL = https://seafile.example.com
----
. Editez le fichier `seahub_settings.py`. Tapez:
+
[source,bash]
----
vi seahub_settings.py
----
. modifier l'entrée FILE_SERVER_ROOT. Le fichier doit contenir ceci:
+
[source,python]
----
FILE_SERVER_ROOT = 'https://seafile.example.com/seafhttp'
----
. Démarrez Seafile. Tapez:
+
[source,bash]
----
sudo -u web1 ./seafile.sh start <1>
sudo -u web1 ./seahub.sh start 8090 <1>
----
<1> remplacer le nom de user web1 par celui correspondant à celui du site web installé (indiqué dans le champ `Options`->`linux user` du web domain). (Si vous n'avez qu'un site, web1 est le bon).
. Débloquez le port 8090 et 8092 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 8090 et 8092
.. Cliquez sur `save`
. Faites pointer votre navigateur sur https://seafile.example.com
. La page de login de Seafile doit s'afficher

=== Lancement automatique de Seafile

Afin de s'assurer que Seafile tourne en permanence, on doit créer un script de lancement automatique de Seafile:

. Créer un script de lancement automatique. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private/seafile
touch startseafile.sh
chmod +x startseafile.sh
vi startseafile.sh
----
. Coller le texte suivant de le fichier ouvert:
+
[source,bash]
----
#!/bin/bash
 
# Change the value of "seafile_dir" to your path of seafile installation
seafile_dir=/var/www/seafile.example.com/private/seafile <1>
script_path=${seafile_dir}/seafile-server-latest
seafile_init_log=${seafile_dir}/logs/seafile.init.log
seahub_init_log=${seafile_dir}/logs/seahub.init.log
 
case "$1" in
start)
${script_path}/seafile.sh start >> ${seafile_init_log} 
${script_path}/seahub.sh start 8090 >> ${seahub_init_log}
;;
restart)
${script_path}/seafile.sh restart >> ${seafile_init_log} 
${script_path}/seahub.sh restart 8090 >> ${seahub_init_log}
;;
stop)
${script_path}/seahub.sh stop >> ${seahub_init_log} 
${script_path}/seafile.sh stop >> ${seafile_init_log}
;;
*)
echo "Usage: /etc/init.d/seafile {start|stop|restart}"
exit 1
;;
esac
----
<1> remplacer example.com par votre nom de domaine
. Créer un job cron dans ISPConfig pour démarrer Seafile au démarrage
.. Allez dans la rubrique `Sites` puis dans le menu `Cron Jobs`. Cliquez sur `Add cron Job`. Saisisssez les champs:
*** `Parent Website:` <- mettre `example.com`
*** `Minutes:` <- mettre *
*** `Hours:` <- mettre *
*** `Days of month:` <- mettre *
*** `Months:` <- mettre `@reboot`
*** `Days of week:` <- mettre *
*** `Command to run:` <- mettre `/var/www/seafile.example.com/private/seafile/startseafile.sh start`
. Créer un second job cron dans ISPConfig pour redémarrer Seafile tous les jours
.. Allez dans la rubrique `Sites` puis dans le menu `Cron Jobs`. Cliquez sur `Add cron Job`. Saisissez les champs:
*** `Parent Website:` <- mettre `example.com`
*** `Minutes:` <- mettre 45
*** `Hours:` <- mettre 20
*** `Days of month:` <- mettre *
*** `Months:` <- mettre *
*** `Days of week:` <- mettre *
*** `Command to run:` <- mettre `/var/www/seafile.example.com/private/seafile/startseafile.sh restart`
. Arretez le serveur précédemment lancé en tant que root. Tapez:
. Enjoy !

== Installation d'un serveur de VPN Pritunl

Pritunl est un serveur VPN basé sur OpenVPN.

=== Création du site web de Pritunl

Appliquez la procédure suivante:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `pritunl`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `pritunl`.
.. Le faire pointer vers le web folder `pritunl`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# Pritunl httpserver
#
  SSLProxyEngine On
  SSLProxyCheckPeerCN Off
  SSLProxyCheckPeerName Off
  SSLProxyVerify none

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / https://localhost:8070/
ProxyPassReverse / https://localhost:8070/
ProxyPreserveHost On
----

=== Installation de Pritunl

Veuillez suivre la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Ajoutez des repositories Debian. Tapez:
+
[source,bash]
----
tee /etc/apt/sources.list.d/mongodb-org.list << EOF
deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.2 main
EOF
tee /etc/apt/sources.list.d/pritunl.list << EOF
deb http://repo.pritunl.com/stable/apt buster main
EOF
apt-get install dirmngr
apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv E162F504A20CDF15827F718D4B7C549A058F8B6B
apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv 7568D9BB55FF9E5287D586017AE645C0CF8E292A
apt-get update
apt-get --assume-yes install pritunl mongodb-org
----
. Pritunl utilise en standard le port 80 et 443. Ces deux ports sont utilisés dans notre configuration par le serveur apache
. On commence par arrêter apache. Tapez:

+
[WARNING]
Plus aucun site web ne sera servit. Danger donc.
+
[source,bash]
----
systemctl stop apache2
----
. Démarrez Mongodb ainsi que Pritunl. Tapez:
+
[source,bash]
----
systemctl start mongod pritunl
systemctl enable mongod pritunl
----

=== Configuration de Pritunl

Votre service Pritunl est actif. Vous devez maintenant le configurer pour qu'il fonctionne:

. pointez votre navigateur sur le site web de Pritunl: https://example.com
. Accepter le certificat non sécurisé. La page de setup de Pritunl s'affiche.
. Obtenez la clé d'activation. Tapez: 
+
[source,bash]
----
pritunl setup-key
----
. copier la clé dans la page web. Cliquez sur `Save`
. La page web s'affiche en erreur. Pas d'inquiétude à avoir.
. Arrêtez le serveur Pritunl. Tapez:
+
[source,bash]
----
systemctl stop pritunl
----
. Configurez le serveur pour qu'il n'utilise plus le port 80 et le port 443
+
[source,bash]
----
pritunl set app.server_port 8070
pritunl set app.redirect_server false
----
. Redémarrez apache et pritunl
+
[source,bash]
----
systemctl start apache2
systemctl start pritunl
----
. Pointez maintenant votre navigateur sur le site https://pritunl.example.com . La page de login de pritunl doit s'afficher. Si ce n'est pas le cas, revérifier votre configuration de site web dans ISPConfig et que le port 8070 est bien activé.
. Sur le serveur, tapez:
+
[source,bash]
----
pritunl default-password
----
. Entrez dans la page web la valeur de `username` et de `password` affichés dans le terminal.
. Une boite de dialogue `initial setup` s'affiche. Ne changez rien mais tapez votre mot de passe.
. Vous êtes maintenant connecté sur le site web.
. Cliquez sur l'onglet `Users`
.. Cliquez sur `Add Organization`
.. Entrez votre nom d'organisation. Par exemple `Personnel`
.. Cliquez sur `Add`
.. Cliquez sur `Add User`
.. Remplissez les champs:
*** `Name: ` <- Tapez votre nom de login (pas de caractère accentué pas d'espace)
*** `Select an organization: ` <- sélectionnez votre organisation
*** `Email: ` <- Tapez votre adresse Email
*** `Pin:` <- entrez votre code Pin (que des nombres; au moins 6 chiffres)
.. Cliquez sur `Add`
. Allez sur l'onglet `Servers`
.. Cliquez sur `Add Server`
.. Remplissez les champs:
*** `Name:` <- donnez un nom à votre serveur (pas de caractère accentué pas d'espace)
*** laissez le reste tel quel mais notez bien le numéro de port UDP indiqué
.. Cliquez sur `Add`
.. Cliquez sur `Attach Organization`
.. Sélectionnez le `server` et l' `organization`.
.. Cliquez sur `Attach`
. Débloquez le port VPN dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open UDP ports:`, ajoutez le port UDP du VPN que vous avez noté.
.. Cliquez sur `save`
. Retourner dans l'interface de Pritunl. retournez sur l'onglet `Servers`
.. Cliquez sur `Start server`
. Votre serveur de VPN est opérationnel.

=== Se connecter au serveur de VPN

Comme Pritunl est compatible OpenVPN n'importe quel logiciel compatible OpenVPN peut être utilisé.
Pritunl founit un https://client.pritunl.com/[client] compatible pour Linux, macOS, and Windows.

Pour se connecter à l'aide du client, vous devez charger un fichier de configuration qui est téléchargeable dans l'onglet utilisateur du serveur web.
Ce fichier est à importer dans le logiciel client de Pritunl.
Une fois fait, une compte apparaît dans le logiciel client. Vous pourrez vous connecter en cliquant sur le bouton `Connect` du compte utilisateur.

=== Réparer une base Pritunl

Si jamais votre base est corrompue, vous pourrez la réparer en tapant:

[source,bash]
----
systemctl stop pritunl
pritunl repair-database
systemctl start pritunl
----

=== Mot de passe perdu

Vous pouvez re-générer un mot de passe en tapant:

[source,bash]
----
pritunl reset-password
----

== Installation de Grafana

Grafana est un logiciel de visualisation et d'analyse à code source ouvert. Il vous permet d'interroger, de visualiser, d'alerter et d'explorer vos mesures, quel que soit l'endroit où elles sont stockées. En clair, il vous fournit des outils pour transformer vos données de base de données de séries chronologiques (TSDB) en de magnifiques graphiques et visualisations.
Grafana s'appuie sur Prometheus afin d'obtenir des métriques.
Loki est aussi installé pour réaliser une analyse précise des fichiers de logs.

Cette installation est optionnelle puisque Munin est déjà installé sur votre système.

=== Création du site web de Grafana

Appliquez la procédure suivante:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `grafana`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `grafana`.
.. Le faire pointer vers le web folder `grafana`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# grafana httpserver
#

SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost:3000/
ProxyPassReverse / http://localhost:3000/
----

=== Installation de Grafana

. <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
echo "deb https://packages.grafana.com/oss/deb stable main" >>/etc/apt/sources.list.d/grafana.list
wget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -
----
. Installez les paquets. Tapez:
+
[source,bash]
----
apt update
apt install grafana prometheus prometheus-mysqld-exporter prometheus-apache-exporter prometheus-bind-exporter prometheus-process-exporter
----
. Editez la configuration de Prometheus. Tapez:
+
[source,bash]
----
vi /etc/prometheus/prometheus.yml
----
. Ajoutez les lignes suivantes:
+
[source,yaml]
----
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    scrape_timeout: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: node
    # If prometheus-node-exporter is installed, grab stats about the local
    # machine by default.
    static_configs:
      - targets: ['localhost:9100']

  - job_name: dns-master
    static_configs:
      - targets: ['localhost:9119']
        labels:
          alias: dns-master

  - job_name: apache
    static_configs:
      - targets: ['localhost:9117']

  - job_name: process
    static_configs:
      - targets: ['localhost:9256']

  - job_name: mysql
    static_configs:
      - targets: ['localhost:9104']
----
. Editez la configuration de `prometheus-process-exporter`. Tapez:
+
[source,bash]
----
vi etc/default/prometheus-process-exporter
----
. Ajoutez les lignes suivantes:
+
[source]
----
ARGS="-procnames postgres,dovecot,apache2,sshd,php-fpm7.3,rspamd,named,mysqld"
----
. Editez la configuration de `prometheus-mysqld-exporter`. Tapez:
+
[source,bash]
----
vi etc/default/prometheus-mysqld-exporter
----
. Ajoutez les lignes suivantes:
+
[source]
----
ARGS='--config.my-cnf /etc/mysql/debian.cnf --collect.info_schema.tables.databases="*" --collect.auto_increment.columns --collect.perf_schema.file_instances.filter=".*" --collect.info_schema.tablestats'
----
. Ajuster les permissions du fichier de conf de mysql pour donner l'accès à prometheus. Tapez:
+
[source,bash]
----
chmod 644 /etc/mysql/debian.cnf
----
. Ajustez la configuration de bind pour servir des statistiques. Tapez:
+
[source,bash]
----
vi /etc/bind/named.conf
----
. Ajouter dans le fichier:
+
[source]
----
statistics-channels {
  inet 127.0.0.1 port 8053 allow { 127.0.0.1; };
};
----
. Activez dans mysql quelques statistiques. Tapez:
+
[source,bash]
----
mysql -p
----
. tapez votre mot de passe root pour mysql. puis taper:
+
[source,mysql]
----
INSTALL PLUGIN QUERY_RESPONSE_TIME_AUDIT SONAME 'query_response_time.so';
INSTALL PLUGIN QUERY_RESPONSE_TIME SONAME 'query_response_time.so';
INSTALL PLUGIN QUERY_RESPONSE_TIME_READ SONAME 'query_response_time.so';
INSTALL PLUGIN QUERY_RESPONSE_TIME_WRITE SONAME 'query_response_time.so';
SET GLOBAL query_response_time_stats=ON;
SET GLOBAL userstat=ON;
----
. Redémarrez les services. Taper:
+
[source,mysql]
----
service prometheus restart
service prometheus-mysqld-exporter restart
service prometheus-process-exporter restart
----

=== Installation et configuration de Loki

Pour installer Loki, appliquez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Allez sur le site de https://github.com/grafana/loki/releases[loki] et repérez la dernière version à charger.
. Tapez:
+
[source,bash]
----
cd /usr/local/bin
curl -fSL -o loki.gz https://github.com/grafana/loki/releases/download/v1.4.1/loki-linux-amd64.zip
gunzip loki.gz
chmod a+x loki
----
. Créez le fichier de configuration de loki
+
[source,bash]
----
vi /etc/config-loki.yml
----
. Ajoutez le texte ci dessous dans le fichier
+
----
auth_enabled: false

server:
  http_listen_port: 3100
  log_level: "warn"

ingester:
  lifecycler:
    address: 127.0.0.1
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
    final_sleep: 0s
  chunk_idle_period: 5m
  chunk_retain_period: 30s

schema_config:
  configs:
  - from: 2010-01-01
    store: boltdb
    object_store: filesystem
    schema: v9
    index:
      prefix: index_
      period: 168h

storage_config:
  boltdb:
    directory: /tmp/loki/index

  filesystem:
    directory: /tmp/loki/chunks

limits_config:
  enforce_metric_name: false
  reject_old_samples: true
  reject_old_samples_max_age: 168h

chunk_store_config:
  max_look_back_period: 0

table_manager:
  chunk_tables_provisioning:
    inactive_read_throughput: 0
    inactive_write_throughput: 0
    provisioned_read_throughput: 0
    provisioned_write_throughput: 0
  index_tables_provisioning:
    inactive_read_throughput: 0
    inactive_write_throughput: 0
    provisioned_read_throughput: 0
    provisioned_write_throughput: 0
  retention_deletes_enabled: false
  retention_period: 0

----
. Débloquez le port 3100 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 3100
.. Cliquez sur `save`
. Testez maintenant la configuration de Loki. Tapez:
+
[source,bash]
----
loki -config.file /etc/config-loki.yml
----
. Ouvrez un navigateur et visitez: http://example.com:3100/metrics
. Maintenant arrêtez Loki en tapant *CTRL-C*.
. Bloquez par sécurité le port 3100 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, Supprimer le port 3100
.. Cliquez sur `save`
. Configurez un service Loki afin de le faire tourner en arrière plan. Tapez:
+
[source,bash]
----
vi /etc/systemd/system/loki.service
----
. Ajoutez le texte ci dessous et sauvez:
+
[source]
----
[Unit]
Description=Loki service
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/loki -config.file /etc/config-loki.yml

[Install]
WantedBy=multi-user.target
----
. Maintenant lancez le service et vérifiez que tout est fonctionnel. Tapez:
Now start and check the service is running.
+
[source,bash]
----
sudo service loki start
sudo service loki status
----


=== Installation et configuration de Promtail

Installez maintenant Promtail:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Tapez:
+
[source,bash]
----
cd /usr/local/bin
curl -fSL -o promtail.gz https://github.com/grafana/loki/releases/download/v1.4.1/promtail-linux-amd64.zip
gunzip promtail.gz
chmod a+x promtail
----
. Créez la configuration de Promtail. Tapez:
+
[source,bash]
----
mkdir -p /var/log/journal
vi /etc/config-promtail.yml
----
. Et ajoutez le texte suivant puis sauvez:
+
[source]
----
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://127.0.0.1:3100/api/prom/push

scrape_configs:
- job_name: system
  static_configs:
  - targets:
      - localhost
    labels:
      job: varlogs
      __path__: /var/log/{*.log,*/*.log}
----
. Débloquez le port 9080 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 9080
.. Cliquez sur `save`
. testez que Promtail fonctionne. Tapez:
+
[source,bash]
----
promtail -config.file /etc/config-promtail.yml
----
. Ouvrez un navigateur et visitez: http://example.com:9080
. Maintenant arrêtez Promtail en tapant *CTRL-C*.
. Bloquez par sécurité le port 9080 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, Supprimer le port 9080
.. Cliquez sur `save`
. Configurez un service Promtail afin de le faire tourner en arrière plan. Tapez:
+
[source,bash]
----
vi /etc/systemd/system/promtail.service
----
. Ajoutez le texte ci dessous et sauvez:
+
[source]
----
[Unit]
Description=Promtail service
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/promtail -config.file /etc/config-promtail.yml

[Install]
WantedBy=multi-user.target
----
. Maintenant lancez le service et vérifiez que tout est fonctionnel. Tapez:
+
[source,bash]
----
sudo service promtail start
sudo service promtail status
----
. Allez sur votre site grafana http://grafana.example.com et ajoutez une source de données de type loki
. Mettez l'URL suivante: http://127.0.0.1:3100 . Laissez tout le reste tel quel.
. vous pouvez maintenant explorer vos logs en utilisant le menu explore sur la gauche. Dans la zone texte "Log Labels" essayez ces examples un à un: 
+
[source]
----
{job="varlogs"}
----

== Annexe

=== Installation de Hestia

Hestia est basé sur VestaCP. C'est une alternative opensource et plus moderne de cet outiL.
La documentation est proposée ici: https://docs.hestiacp.com/

Attention Hestia n'est pas compatible de Webmin dans le sens que webmin est incapable de lire et d'interpréter les fichiers créés par Hestia.

De même, Hestia est principalement compatible de PHP. Si vous utilisez des système web basés sur des applicatifs écrits en Python ou en Ruby, la configuration sera à faire à la main avec tous les problèmes de compatibilité que cela impose.

Pour installer:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Télécharger le package et lancez l’installeur
.. Tapez :
+
[source,bash]
----
wget https://raw.githubusercontent.com/hestiacp/hestiacp/release/install/hst-install.sh
----
.. Lancez l'installeur. Tapez :
+
[source,bash]
----
bash hst-install.sh -g yes -o yes
----
.. Si le système n'est pas compatible, HestiaCP vous le dira. Sinon,  il vous informe de la configuration qui sera installée. Tapez `Y` pour continuer.
.. Entrez votre adresse mail standard et indépendante du futur serveur qui sera installé. ce peut être une adresse gmail.com par exemple.
. Hestia est installé. Il est important de bien noter le mot de passe du compte admin de Hestia ainsi que le numéro de port du site web

=== backup

pour installer borg backup en mode rescue afin d'avoir la dernière version.
apt install python3-pip libssl-dev cython3 gcc g++ libpython-dev libacl1-dev
pip3 install borgbackup
pip3 install rdiff-backup


