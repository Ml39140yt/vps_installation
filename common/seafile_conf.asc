== Installation du système de partage de fichiers Seafile

Seafile est un système de partage de fichier simple et efficace écrit en Python. Il existe des clients de connexion pour Windows, Linux, Android, IOS.

Cette installation est optionnelle.

=== Création du site web de Seafile

Appliquez la procédure suivante:

. Allez dans la rubrique `DNS`, sélectionnez le menu `Zones`, Sélectionnez votre Zone, Allez dans l'onglet `Records`.
.. Cliquez sur `A` et saisissez:
** `Hostname:` <- Tapez `seafile`
** `IP-Address:` <- Double cliquez et sélectionnez l'adresse IP de votre serveur
.. Cliquez sur `Save`
. Créer un <<#subdomain-site, sub-domain (vhost)>> dans le configurateur de sites.
.. Lui donner le nom `seafile`.
.. Le faire pointer vers le web folder `seafile`.
.. Activer let’s encrypt ssl
.. Activer `Fast CGI` pour PHP
.. Laisser le reste par défaut.
.. Dans l’onglet Options:
.. Dans la boite `Apache Directives:` saisir le texte suivant:
+
[source,apache]
----
Alias /media {DOCROOT}/private/seafile/seafile-server-latest/seahub/media
RewriteEngine On

<Location /media>
Require all granted
</Location>

Alias /.well-known {DOCROOT}/private/seafile/.well-known
RewriteEngine On

<Location /.well-known>
Require all granted
</Location>

ProxyPass "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
ProxyPassReverse "/.well-known/acme-challenge" http://localhost:80/.well-known/acme-challenge
RewriteRule ^/.well-known/acme-challenge - [QSA,L]

# seafile httpserver
#
ProxyPass /seafhttp http://localhost:8092
ProxyPassReverse /seafhttp http://localhost:8092
RewriteRule ^/seafhttp - [QSA,L]
#
# seahub
#
SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
ProxyPass / http://localhost:8090/
ProxyPassReverse / http://localhost:8090/
----

=== Création de bases de données

. Loguez vous sur ISPConfig
. Aller dans la rubrique `Sites`
.. Aller dans le menu `Database users` pour définir un utilisateur MariaDB
... Cliquez sur `Add new User` pour créer un nouvel utilisateur
... Saisissez les informations:
**** `Database user:` <-  saisir votre nom d'utilisateur `seafile` par exemple
**** `Database password:` <- Saisir <<#pass_gen, votre mot de passe généré>> ou en générer un en cliquant sur le bouton
**** `Repeat Password:` <- Resaisir de nouveau le mot de passe
.. Aller dans le menu `Database` pour définir les bases de données
.. Appliquer l'opération ci après 3 fois d'affilée pour créer les trois bases suivantes: `ccnetdb`, `seafiledb`, `seahubdb`
... Cliquez sur `Add new Database` pour créer une nouvelle base de données
... Saisissez les informations:
**** `Site:` <- sélectionner le site `example.com`
**** `Database name:` <- Saisissez le nom de la base de données 
**** `Database user:` <- Saisir ici le nom d'utilisateur créé: `cxseafile`. x: est le numéro de client.
... Cliquez sur `save`
.. Les trois bases de données doivent apparaître dans la liste des bases

=== Téléchargez et installez Seafile

Appliquez la procédure suivante:

. <<#root_login, Loguez vous comme root sur le serveur>>
. Installez quelques paquets Debian complémentaires. Tapez:
+
[source,bash]
----
apt-get install python2.7 python-setuptools python-simplejson python-pil python-mysqldb python-flup
----
. Je préfère faire tourner mes serveurs dans le répertoire privé plutôt que dans le répertoire web pour des questions de sécurité. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private
mkdir seafile
cd seafile
wget https://download.seadrive.org/seafile-server_7.0.5_x86-64.tar.gz
tar zxvf seafile-server_7.0.5_x86-64.tar.gz
mkdir installed
mv seafile-server_* installed
cd seafile-server-*
./setup-seafile-mysql.sh
cd ../..
chown -R web1:client0 seafile <1>
----
<1> choisissez le user et le groupe de votre site web. Ces informations sont consultables dans ISPConfig en consultant les informations du Web Domain->onglet `Options`->champs Linux User et Linux Group.
. A ce moment, vous devez répondre à un certain nombre de questions.
. Choisissez le mode de configuration 2) pour indiquer vous même les informations sur les bases de données créées.
. Vous devrez ensuite donner le nom d'utilisateur pour la base de données, le mot de passe ainsi que le nom des 3 bases de données.
. Si tout est saisi correctement le programme doit donner une synthèse de ce qui a été configuré

=== Lancement initial

Nous allons effectuer un premier lancement du serveur Seafile:

. allez dans le répertoire contenant les configurations et éditez `gunicorn.conf`. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private/seafile/conf
vi gunicorn.conf
----
. Repèrez le texte `bind=` et mettez un numéro de port 8090 à la place de 8000. Comme ceci:
+
[source,bash]
----
bind = "127.0.0.1:8090"
----
. Editez le fichier `seafile.conf`. Tapez:
+
[source,bash]
----
vi seafile.conf
----
. mettez un port 8092 au lieu du port 8080 saisi pour l'entrée `fileserver`. Le fichier doit contenir ceci:
+
[source,ini]
----
[fileserver]
port = 8092
----
. Editez le fichier `ccnet.conf`. Tapez:
+
[source,bash]
----
vi ccnet.conf
----
. modifier l'entrée SERVICE_URL. Le fichier doit contenir ceci:
+
[source,bash]
----
SERVICE_URL = https://seafile.example.com
----
. Editez le fichier `seahub_settings.py`. Tapez:
+
[source,bash]
----
vi seahub_settings.py
----
. modifier l'entrée FILE_SERVER_ROOT. Le fichier doit contenir ceci:
+
[source,python]
----
FILE_SERVER_ROOT = 'https://seafile.example.com/seafhttp'
----
. Démarrez Seafile. Tapez:
+
[source,bash]
----
sudo -u web1 ./seafile.sh start <1>
sudo -u web1 ./seahub.sh start 8090 <1>
----
<1> remplacer le nom de user web1 par celui correspondant à celui du site web installé (indiqué dans le champ `Options`->`linux user` du web domain). (Si vous n'avez qu'un site, web1 est le bon).
. Débloquez le port 8090 et 8092 dans votre firewall
.. Allez sur le site ispconfig https://example.com:8080/
.. Loguez-vous et cliquez sur la rubrique `System` et le menu `Firewall`. Cliquez sur votre serveur.
.. dans la rubrique `Open TCP ports:`, ajoutez le port 8090 et 8092
.. Cliquez sur `save`
. Faites pointer votre navigateur sur https://seafile.example.com
. La page de login de Seafile doit s'afficher

=== Lancement automatique de Seafile

Afin de s'assurer que Seafile tourne en permanence, on doit créer un script de lancement automatique de Seafile:

. Créer un script de lancement automatique. Tapez:
+
[source,bash]
----
cd /var/www/seafile.example.com/private/seafile
touch startseafile.sh
chmod +x startseafile.sh
vi startseafile.sh
----
. Coller le texte suivant de le fichier ouvert:
+
[source,bash]
----
#!/bin/bash
 
# Change the value of "seafile_dir" to your path of seafile installation
seafile_dir=/var/www/seafile.example.com/private/seafile <1>
script_path=${seafile_dir}/seafile-server-latest
seafile_init_log=${seafile_dir}/logs/seafile.init.log
seahub_init_log=${seafile_dir}/logs/seahub.init.log
 
case "$1" in
start)
${script_path}/seafile.sh start >> ${seafile_init_log} 
${script_path}/seahub.sh start 8090 >> ${seahub_init_log}
;;
restart)
${script_path}/seafile.sh restart >> ${seafile_init_log} 
${script_path}/seahub.sh restart 8090 >> ${seahub_init_log}
;;
stop)
${script_path}/seahub.sh stop >> ${seahub_init_log} 
${script_path}/seafile.sh stop >> ${seafile_init_log}
;;
*)
echo "Usage: /etc/init.d/seafile {start|stop|restart}"
exit 1
;;
esac
----
<1> remplacer example.com par votre nom de domaine
. Créer un job cron dans ISPConfig pour démarrer Seafile au démarrage
.. Allez dans la rubrique `Sites` puis dans le menu `Cron Jobs`. Cliquez sur `Add cron Job`. Saisisssez les champs:
*** `Parent Website:` <- mettre `example.com`
*** `Minutes:` <- mettre *
*** `Hours:` <- mettre *
*** `Days of month:` <- mettre *
*** `Months:` <- mettre `@reboot`
*** `Days of week:` <- mettre *
*** `Command to run:` <- mettre `/var/www/seafile.example.com/private/seafile/startseafile.sh start`
. Créer un second job cron dans ISPConfig pour redémarrer Seafile tous les jours
.. Allez dans la rubrique `Sites` puis dans le menu `Cron Jobs`. Cliquez sur `Add cron Job`. Saisissez les champs:
*** `Parent Website:` <- mettre `example.com`
*** `Minutes:` <- mettre 45
*** `Hours:` <- mettre 20
*** `Days of month:` <- mettre *
*** `Months:` <- mettre *
*** `Days of week:` <- mettre *
*** `Command to run:` <- mettre `/var/www/seafile.example.com/private/seafile/startseafile.sh restart`
. Arretez le serveur précédemment lancé en tant que root. Tapez:
. Enjoy !
