== Remplacer apache par nginx

Nous allons voir comment remplacer apache par nginx.
Il y a quelques différences entre apache et nginx, il se peut donc que vous deviez ajuster certains paramètres pour vos sites web.

Par exemple:

* nginx ne prend pas en charge les fichiers .htaccess.
* nginx n'utilise pas les différents modules d'Apache comme mod_rewrite.

Vous pouvez utiliser différents convertisseurs en ligne comme https://winginx.com/en/htaccess[winginx.com] pour réécrire les configurations d'apache à nginx. Mais gardez à l'esprit, qu'il n'est pas garanti que le convertisseur fonctionne sans aucune erreur. C'est le cas notamment pour les commandes `Proxypass`

Si vous changez le serveur web dans ISPConfig d'apache à nginx, vous ne pouvez pas voir vos directives apache supplémentaires dans l'interface (mais elles sont toujours dans la base de données). Vous pouvez parcourir tous vos sites web et écrire les directives ou les récupérer de la base de données en utilisant *phpmyadmin* ou *mysql* avec cette commande sql :

[source,sql]
----
SELECT domaine, apache_directives FROM web_domain WHERE apache_directives != '';
----

Pour trouver tous les fichiers `.htaccess` à convertir, vous pouvez exécuter la commande suivante :

[source,bash]
----
find /var/www/clients/ -name .htaccess -not -path "*/stats/*"
----


Les étapes sont les suivantes:

. installez nginx
+
[source,bash]
----
apt-get install nginx
----
+
. installez php-fpm
+
[source,bash]
----
apt-get install php-fpm
----
+
. Assurez vous que /etc/php7/fpm/php.ini contient:
+
[source,php]
----
cgi.fix_pathinfo=0
date.timezone=”Europe/Berlin”
----
+
. Redémarrez php-fpm en tapant:
+
[source,bash]
----
/etc/init.d/php5-fpm reload
----
+
. Maintenant nginx est installé mais apache est toujours votre serveur web actif.
. Activez le mode Maintenance:
** Activez le mode maintenance dans ISPConfig sous Système / Mainconfig dans l'onglet Misc pour empêcher les changements pendant la migration.
. passer à nginx dans ISPConfig:
** Connectez-vous en tant que root dans phpmyadmin, ouvrez la base de données dbispconfig, sélectionnez la table server et éditez le serveur.
** Faites défiler jusqu'à `config` et trouvez la ligne `[global]` finden. Dans la ligne suivante, remplacez:
+
[source]
----
webserver=apache
----
+
par
+
[source]
----
webserver=nginx
----

** Descendez encore plus bas jusqu'à la ligne `[web]` et changez la ligne suivante de :
+
[source]
----
server_type=apache
----
+
à
+
[source]
----
server_type=nginx
----
+
. Créez `ispconfig.vhost` dans `/etc/nginx/sites-available`. Tapez:
+
[source,bash]
----
vi /etc/nginx/sites-avalaible/ispconfig.vhost
----
+
. Et ajoutez le contenu suivant :
** avec du SSL:
+
[source]
----
server {
    listen 8080;
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_certificate /usr/local/ispconfig/interface/ssl/ispserver.crt;
        ssl_certificate_key /usr/local/ispconfig/interface/ssl/ispserver.key;
    server_name _;
    root /usr/local/ispconfig/interface/web/;
    client_max_body_size 20M;
    location / {
        index index.php index.html;
    }

# serve static files directly
    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt)$ {
        access_log off;
    }
    location ~ \.php$ {
        try_files $uri =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/lib/php5-fpm/ispconfig.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_param PATH_INFO $fastcgi_script_name;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 4k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }

    location ~ /\. {
        deny all;
    }
}
----
+
** Sans du SSL:
+
[source]
----
server {
    listen 8080;
        ssl off;
    server_name _;
    root /usr/local/ispconfig/interface/web/;
    client_max_body_size 20M;
    location / {
        index index.php index.html;
    }

# serve static files directly
    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt)$ {
        access_log off;
    }
    location ~ \.php$ {
        try_files $uri =404;
        include /etc/nginx/fastcgi_params;
        fastcgi_pass unix:/var/lib/php5-fpm/ispconfig.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_param PATH_INFO $fastcgi_script_name;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 4k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }
    location ~ /\. {
        deny all;
    }
}
----
+
. Créez le lien symbolique en tapant: 
+
[source,bash]
----
ln -s /etc/nginx/sites-available/ispconfig.vhost /etc/nginx/sites-enabled/000-ispconfig.vhost
----
+
. Ajustez les sites web.  Désactivez le mode Maintenance et convertissez les `htaccess-file` et `apache-directives` existants. Insérez les nouvelles valeurs dans l'interface web de chaque site web.
. Si vous n'avez pas modifié tous les sites web, exécutez l'outil `resyn-tool` pour les sites web.
. Désactivez apache et démarrez nginx. Tapez:
+
[source,bash]
----
/etc/init.d/apache2 stop
update-rc.d -f apache2 remove
/etc/init.d/nginx start
----

